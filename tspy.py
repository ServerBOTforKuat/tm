import asyncio
import re
from datetime import timedelta

from telethon import events

from .. import loader


@loader.tds
class SpyMod(loader.Module):
    """–°–ª–µ–∂–∫–∞ –∑–∞ –∫–ª–∞–Ω–∞–º–∏ –≤ –ñ–∞–±–∞–±–æ—Ç–µ."""

    strings = {"name": "spy"}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    @staticmethod
    async def tms(m, i):
        global MS
        MS = timedelta(
            hours=m.date.hour, minutes=m.date.minute, seconds=m.date.second
        ) - timedelta(hours=i.date.hour, minutes=i.date.minute, seconds=i.date.second)

    async def err(self, m, p):
        async with self.client.conversation(m.chat_id, exclusive=False) as conv:
            try:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
                )
            except asyncio.exceptions.TimeoutError:
                RSP = await self.client.get_messages(m.chat_id, search=" ")
            await conv.cancel_all()

    async def aww(self, m):
        if m.from_id not in {1124824021}:
            return
        if "–æ–¥–µ—Ä–∂–∞–ª" in m.text:
            klan = re.search(r"–ö–ª–∞–Ω (.+) –æ–¥–µ—Ä–∂–∞–ª[\s\S]* (\d+):(\d+)", m.text)
        elif "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏" in m.text:
            klan = re.search(r", (.+), –≤—ã[\s\S]* (\d+):(\d+)", m.text)
        else:
            return
        s = await self.client.get_messages(1767017980, search=f"VS {klan.group(1)}")
        for i in s:
            await self.tms(m, i)
            if timedelta(days=0, hours=4) > MS:
                return
            p = re.search(r"..(.+) <.+> (.+)", i.text)
            chet = f"{klan.group(2)}:{klan.group(3)}"
            if int(klan.group(2)) < int(klan.group(3)):
                chet = "".join(reversed(chet))
            tog = f"üèÜ {p.group(1)}\n             {chet}\nüîª {p.group(2)}"
            if (klan.group(1) == p.group(1) and "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏" in m.text) or (
                klan.group(1) != p.group(1) and "–æ–¥–µ—Ä–∂–∞–ª" in m.text
            ):
                tog = f"üèÜ {p.group(2)}\n             {chet}\nüîª {p.group(1)}"
            await i.reply(tog)
        ms = re.findall(r"‚Ä¢.+(<.+?(\d+).+>)", m.text)
        tog = f"Chat id: {m.chat_id}\n\n–°–æ—Å—Ç–∞–≤ {klan.group(1)}:"
        for i in ms:
            tog += f"\n{i[0]} {i[1]}"
        return await self.client.send_message(1655814348, tog)

    async def bww(self, m):
        if (RSP.text.startswith(("–ê–ª–ª–æ", "–í–∞—à –∫–ª–∞–Ω", "–î–ª—è —Å—Ç–∞—Ä—Ç–∞", "–ß—É–≤–∞–∫"))) or (
            len(m.message) not in {21, 30}
        ):
            return
        p = None
        await self.err(m, p)
        src = f"{m.chat_id} {m.sender_id} –ö–ª–∞–Ω:"
        ms = await self.client.get_messages(1655814348, search=src)
        for i in (i for i in ms if "–¥–µ—Ä–µ–≤—è–Ω" not in i.text.casefold()):
            if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.message:
                klan = re.search(r"–õ–∏–≥–∞: (.+)\n–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)\n\n–ö–ª–∞–Ω: (.+)", i.text)
                lira = f"{klan.group(3)}\n–õ–∏–≥–∞: {klan.group(1)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(2)}"
            else:
                klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.text)
                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                p = await self.client.get_messages(1782816965, search=src)
                if p.total == 0:
                    return
                for i in p:
                    lira = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message)
                    lira = f"{klan.group(1)}\n–õ–∏–≥–∞: {lira.group(1)}"
            return await self.client.send_message(1767017980, f"–í –ø–æ–∏—Å–∫–µ {lira}")
        return

    async def cww(self, m):
        if m.from_id not in {1124824021}:
            return
        klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", m.text)
        src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
        ms = await self.client.get_messages(1782816965, search=src)
        if ms.total == 0:
            src = f"{m.chat_id} {klan.group(1)} –õ–∏–≥–∞:"
            p = await self.client.get_messages(1655814348, search=src)
            if p.total == 0:
                return
            for i in p:
                ms = re.search(r"–õ–∏–≥–∞: (.+)", i.text).group(1)
        else:
            for i in ms:
                ms = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.text).group(1)
        if "–¥–µ—Ä–µ–≤—è–Ω" in ms.casefold():
            return
        txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {ms}"
        await self.client.send_message(1767017980, txt)
        capt = re.findall(r"<.+?id=(\d+)\">", m.text)
        tog = f"Chat id: {m.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n\n–°–æ—Å—Ç–∞–≤:"
        for i in capt:
            tog += f"\n{i}"
        return await self.client.send_message(1655814348, tog)

    async def dww(self, m):
        p = "–ö–ª–∞–Ω"
        await self.err(m, p)
        klan = re.search(r"–Ω (.+):[\s\S]*–∞: (.+)[\s\S]*—å: (.+)", RSP.text)
        info = f"Chat id: {m.chat_id}\nUser id: {m.sender_id}\n–õ–∏–≥–∞: {klan.group(2)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(3)}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
        return await self.client.send_message(1655814348, info)

    async def eww(self, m):
        if len(m.message) not in {17, 8}:
            return
        p = "üê∏"
        await self.err(m, p)
        reg = re.search(
            r": (.+)[\s\S]*–£.+: (.+)[\s\S]*—Å—Å.+: (.+)",
            RSP.text,
        )
        info = f"Chat id: {m.chat_id}\nUser id: {m.sender_id}\n–ñ–∞–±–∞: {reg.group(1)}\n–£—Ä–æ–≤–µ–Ω—å: {reg.group(2)}\n–ö–ª–∞—Å—Å: {reg.group(3)}"
        return await self.client.send_message(1655814348, info)

    async def eee(self, m):
        fff = {
            "–û—á–µ–Ω—å": self.aww(m),
            "–ö–ª–∞–Ω": self.aww(m),
            "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(m),
            "@toadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(m),
            "–ê–ª–ª–æ": self.cww(m),
            "–º–æ–π –∫–ª–∞–Ω": self.dww(m),
            "@toadbot –º–æ–π –∫–ª–∞–Ω": self.dww(m),
            "–º–æ—è –∂–∞–±–∞": self.eww(m),
            "@toadbot –º–æ—è –∂–∞–±–∞": self.eww(m),
            "/my_toad": self.eww(m),
        }
        for i in (i for i in fff if m.message.casefold().startswith(i)):
            return await fff[i]
        return

    async def watcher(self, m):
        return await self.eee(m)
