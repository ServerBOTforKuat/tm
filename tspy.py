import asyncio
import re
from datetime import timedelta

from telethon import events

from .. import loader


@loader.tds
class SpyMod(loader.Module):
    """–°–ª–µ–∂–∫–∞ –∑–∞ –∫–ª–∞–Ω–∞–º–∏ –≤ –ñ–∞–±–∞–±–æ—Ç–µ."""

    strings = {"name": "spy"}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    @staticmethod
    async def tms(m, i):
        global MS
        MS = timedelta(
            hours=m.date.hour, minutes=m.date.minute, seconds=m.date.second
        ) - timedelta(hours=i.date.hour, minutes=i.date.minute, seconds=i.date.second)

    async def err(self, m, p):
        async with self.client.conversation(m.chat_id, exclusive=False) as conv:
            try:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
                )
            except asyncio.exceptions.TimeoutError:
                RSP = await self.client.get_messages(m.chat_id, search=" ")
            await conv.cancel_all()

    async def rrr(self, m):
        async with self.client.conversation(m.chat_id, exclusive=False) as conv:
            try:
                global RSP
                RSP = await conv.get_response()
            except asyncio.exceptions.TimeoutError:
                RSP = await self.client.get_messages(m.chat_id, search=" ")
            await conv.cancel_all()

    async def aww(self, m):
        if m.from_id not in [1124824021]:
            return
        if "–æ–¥–µ—Ä–∂–∞–ª" in m.text:
            klan = re.search(r"–Ω (.+) –æ[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", m.text)
            tog = f"üèÜ {klan.group(1)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(2)}"
        elif "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏" in m.text:
            klan = re.search(r", (.+),[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", m.text)
            tog = f"üèÜ {klan.group(2)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(1)}"
        else:
            klan = re.search(r"–Ω (.+),.+\n.+: (.+)", m.text)
            tog = f"{klan.group(1)} ü´Ç {klan.group(2)}\n<i>                                    –Ω–∏—á—å—è</i>"
            return await self.client.send_message(1767017980, tog)
        await self.client.send_message(1767017980, tog)
        tog = f"Chat id: {m.chat_id}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
        for i in re.findall(r"‚Ä¢.+(<.+?(\d+).+>)", m.text):
            tog += f"\n{i[0]} {i[1]}"
        return await self.client.send_message(1655814348, tog)

    async def bww(self, m):
        if len(m.message) not in [21, 30]:
            return
        p = None
        await self.err(m, p)
        if "–û—Ç–ª–∏—á–Ω–æ!" not in RSP.text:
            return
        src = f"{m.chat_id} {m.from_id}"
        ms = await self.client.get_messages(1655814348, search=src)
        for i in (i for i in ms if "–¥–µ—Ä–µ–≤—è–Ω" not in i.text.casefold()):
            if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.text:
                klan = re.search(r"–õ–∏–≥–∞: (.+)\n–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)\n\n–ö–ª–∞–Ω: (.+)", i.text)
                lira = f"{klan.group(3)}\n–õ–∏–≥–∞: {klan.group(1)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(2)}"
            else:
                klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.text).group(1)
                src = f"35 –∫–ª–∞–Ω–æ–≤ {klan}"
                p = await self.client.get_messages(1782816965, search=src)
                if p.total == 0:
                    return
                for i in p:
                    lira = re.search(r"–∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message).group(1)
                    lira = f"{klan}\n–õ–∏–≥–∞: {lira}"
            return await self.client.send_message(1767017980, f"–í –ø–æ–∏—Å–∫–µ {lira}")
        return

    async def cww(self, m):
        if m.from_id not in [1124824021]:
            return
        klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", m.text)
        src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
        ms = await self.client.get_messages(1782816965, search=src)
        if ms.total == 0:
            src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(2)}"
            ms = await self.client.get_messages(1782816965, search=src)
        for i in ms:
            ms = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.text).group(1)
        if "–¥–µ—Ä–µ–≤—è–Ω" in ms.casefold():
            return
        txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {ms}"
        await self.client.send_message(1767017980, txt)
        capt = re.findall(r"<.+?id=(\d+)\">", m.text)
        tog = f"Chat id: {m.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n–õ–∏–≥–∞: {ms}"
        for i in capt:
            tog += f"\n{i}"
        return await self.client.send_message(1655814348, tog)

    async def dww(self, m):
        await self.rrr(m)
        if "–û–ø—ã—Ç" not in RSP.text:
            return
        klan = re.search(r"–Ω (.+):[\s\S]*–∞: (.+)[\s\S]*—å: (.+)", RSP.text)
        info = f"Cid: {m.chat_id}\nUid: {m.from_id}\n–õ–∏–≥–∞: {klan.group(2)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(3)}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
        return await self.client.send_message(1655814348, info)

    async def eee(self, m):
        fff = {
            "–æ—á–µ–Ω—å": self.aww(m),
            "–∫–ª–∞–Ω": self.aww(m),
            "—ç–π, –∫–ª–∞–Ω": self.aww(m),
            "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(m),
            "@toadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(m),
            "–∞–ª–ª–æ": self.cww(m),
            "–º–æ–π –∫–ª–∞–Ω": self.dww(m),
            "@toadbot –º–æ–π –∫–ª–∞–Ω": self.dww(m),
        }
        for i in (i for i in fff if m.message.casefold().startswith(i)):
            return await fff[i]
        return

    async def watcher(self, m):
        return await self.eee(m)
