import asyncio
import re
from datetime import timedelta

from telethon import events
from telethon.tl.types import Message

from .. import loader


@loader.tds
class SpyMod(loader.Module):
    """–°–ª–µ–∂–∫–∞ –∑–∞ –∫–ª–∞–Ω–∞–º–∏ –≤ –ñ–∞–±–∞–±–æ—Ç–µ."""

    strings = {"name": "spy"}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    @staticmethod
    async def tms(message: Message, i):
        global MS
        MS = timedelta(
            hours=message.date.hour,
            minutes=message.date.minute,
            seconds=message.date.second,
        ) - timedelta(hours=i.date.hour, minutes=i.date.minute, seconds=i.date.second)

    async def err(self, message: Message, p):
        async with self.client.conversation(message.chat_id, exclusive=False) as conv:
            try:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(
                        from_users=1124824021, chats=message.chat_id, pattern=p
                    )
                )
            except asyncio.exceptions.TimeoutError:
                RSP = await self.client.get_messages(message.chat_id, search=" ")
            return await conv.cancel_all()

    async def aww(self, message: Message):
        if message.from_id not in [1124824021]:
            return
        if "–æ–¥–µ—Ä–∂–∞–ª" in message.text:
            klan = re.search(r"–Ω (.+) –æ[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", message.text)
            tog = f"üèÜ {klan.group(1)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(2)}"
        elif "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏" in message.text:
            klan = re.search(r", (.+),[\s\S]*: (.+)[\s\S]* (\d+):(\d+)", message.text)
            tog = f"üèÜ {klan.group(2)}\n             {klan.group(3)}:{klan.group(4)}\nüîª {klan.group(1)}"
        else:
            klan = re.search(r"–Ω (.+),.+\n.+: (.+)", message.text)
            tog = f"{klan.group(1)} ü´Ç {klan.group(2)}\n<i>                                    –Ω–∏—á—å—è</i>"
            return await self.client.send_message(1767017980, tog)
        await self.client.send_message(1767017980, tog)
        tog = f"Cid: {message.chat_id}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
        for i in re.findall(r"‚Ä¢.+(<.+?(\d+).+>)", message.text):
            tog += f"\n{i[0]} {i[1]}"
        return await self.client.send_message(1655814348, tog)

    async def bww(self, message: Message):
        if len(message.message) not in [21, 30]:
            return
        p = None
        await self.err(message, p)
        if "–û—Ç–ª–∏—á–Ω–æ!" not in RSP.text:
            return
        src = f"{message.chat_id} {message.from_id}"
        ms = await self.client.get_messages(1655814348, search=src)
        for i in (i for i in ms if "–¥–µ—Ä–µ–≤—è–Ω" not in i.text.casefold()):
            if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.text:
                klan = re.search(r"–õ–∏–≥–∞: (.+)\n–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)\n\n–ö–ª–∞–Ω: (.+)", i.text)
                lira = f"{klan.group(3)}\n–õ–∏–≥–∞: {klan.group(1)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(2)}"
            else:
                klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.text).group(1)
                src = f"35 –∫–ª–∞–Ω–æ–≤ {klan}"
                p = await self.client.get_messages(1782816965, search=src)
                if p.total == 0:
                    return
                for i in p:
                    lira = re.search(r"–∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message).group(1)
                    lira = f"{klan}\n–õ–∏–≥–∞: {lira}"
            return await self.client.send_message(1767017980, f"–í –ø–æ–∏—Å–∫–µ {lira}")
        return

    async def cww(self, message: Message):
        if message.from_id not in [1124824021]:
            return
        klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", message.text)
        src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
        ms = await self.client.get_messages(1782816965, search=src)
        if ms.total == 0:
            src = f"35 –∫–ª–∞–Ω–æ–≤ {klan.group(2)}"
            ms = await self.client.get_messages(1782816965, search=src)
        for i in ms:
            lig = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.text).group(1)
        (if not lig) or ("–¥–µ—Ä–µ–≤—è–Ω" in lig.casefold()) or ({klan.group(1)} not in i.text):
            return
        txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {lig}"
        await self.client.send_message(1767017980, txt)
        tog = f"Cid: {message.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n–õ–∏–≥–∞: {lig}"
        for i in re.findall(r"<.+?id=(\d+)\">", message.text):
            tog += f"\n{i}"
        return await self.client.send_message(1655814348, tog)

    async def dww(self, message: Message):
        p = "–ö–ª–∞–Ω"
        await self.err(message, p)
        if p not in RSP.text:
            return
        klan = re.search(r"–Ω (.+):[\s\S]*–∞: (.+)[\s\S]*—å: (.+)", RSP.text)
        info = f"Cid: {message.chat_id}\nUid: {message.from_id}\n–õ–∏–≥–∞: {klan.group(2)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(3)}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
        return await self.client.send_message(1655814348, info)

    async def eee(self, message: Message):
        fff = {
            "–æ—á–µ–Ω—å –∂–∞–ª—å": self.aww(message),
            "–æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥—É!": self.aww(message),
            "—ç–π, –∫–ª–∞–Ω": self.aww(message),
            "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(message),
            "@toadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É": self.bww(message),
            "–∞–ª–ª–æ,": self.cww(message),
            "–º–æ–π –∫–ª–∞–Ω": self.dww(message),
            "@toadbot –º–æ–π –∫–ª–∞–Ω": self.dww(message),
        }
        for i in (i for i in fff if message.message.casefold().startswith(i)):
            return await fff[i]
        return

    async def watcher(self, message: Message):
        if not isinstance(message, Message):
            return
        return await self.eee(message)
