from math import floor
from asyncio import sleep
from .. import loader, utils
from datetime import timedelta
from telethon.tl.types import Message
from telethon import events, functions, types, sync
from telethon.tl.functions.users import GetFullUserRequest
from telethon.errors.rpcerrorlist import UsernameOccupiedError
from telethon.tl.functions.account import UpdateProfileRequest, UpdateUsernameRequest
import asyncio, datetime, inspect, io, logging, os, threading, time, random, re, requests, urllib.parse

#requires: urllib requests

logger = logging.getLogger(__name__)

def register(cb):
    cb(KramikkMod())

@loader.tds
class KramikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è!"""
    strings = {
        'name': 'Kramikk',
    }

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.me = await client.get_me()
        self.status = db.get('Status', 'status', {})

    async def watcher(self, message):
        a = ""
        bak = {1222132115, 1646740346, 1261343954, 1785723159, 1486632011, 1682801197, 1863720231, 1775420029, 1286303075, 1746686703, 1459363960, 1423368454, 547639600}
        chat = message.chat_id
        chatid= str(chat)
        duel = self.db.get('–î—É—ç–ª—å–∫–∞', 'duel', {})
        jb = "jaba"
        name = self.me.first_name
        randelta = random.randint(3, 21+1)

        if message.sender_id in {1124824021}:
            if "–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: " + name in message.message:
                await message.click(0)
            if "–ì–æ—Å–ø–æ–¥–∏–Ω " + name in message.message:
                await sleep (3)
                await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                await sleep (3)
                await message.respond('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π')

        if message.sender_id in bak:
            if "–∂–∞–±–∞ –¥–Ω—è" in message.message:
                async with self.client.conversation(message.chat_id) as conv:
                    await sleep(randelta+13)
                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                    await message.respond('–∂–∞–±–∞ –∏–Ω—Ñ–æ')
                    response = await response
                    if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in response.text:
                        time_j = re.search('–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º', response.text, re.IGNORECASE)
                        if time_j:
                            hrs = int(time_j.group(1))
                            min = int(time_j.group(2))
                            delta = timedelta(hours=hrs, minutes=min, seconds=n)
                        await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                        await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ', schedule=delta + timedelta(seconds=13))
                        for number in range(2):
                            delta = delta + timedelta(hours=8)
                            await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                            await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ', schedule=delta + timedelta(seconds=n))
                            await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta + timedelta(hours=2, seconds=n+3))
                            await sleep(1)
                    else:
                        if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in response.text:
                            time_r = re.search('—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç', response.text, re.IGNORECASE)
                            if time_r:
                                hrs = int(time_r.group(1))
                                min = int(time_r.group(2))
                                delta = timedelta(hours=hrs, minutes=min, seconds=n)
                            await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta)
                        elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in response.text:
                            await sleep(3)
                            await message.respond('—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                            await sleep(3)
                            await message.respond('—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ')
                            delta = timedelta(hours=2, seconds=n)
                            await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta)
                        else:
                            await sleep(3)
                            await message.respond('–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É')
                        for number in range(2):
                            delta = delta + timedelta(hours=6, seconds=3)
                            await message.client.send_message(chat, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É', schedule=delta)
                            await message.client.send_message(chat, '—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ', schedule=delta + timedelta(seconds=n))
                            await message.client.send_message(chat, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É', schedule=delta + timedelta(hours=2, seconds=n+3))
                            await sleep(3)
                    if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                        time_n = re.search('–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º', response.text, re.IGNORECASE)
                        if time_n:
                            hrs = int(time_n.group(1))
                            min = int(time_n.group(2))
                            delta = timedelta(hours=hrs, minutes=min, seconds=n)
                        await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                    else:
                        delta = timedelta(seconds=n)
                        await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                    for number in range(1):
                        delta = delta + timedelta(hours=12, seconds=3)
                        await message.client.send_message(chat, '–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É', schedule=delta)
                        await sleep(3)

            if name + " –¥—É—ç–ª—å–∫–∞" in message.message:
                if chatid in duel:
                    duel.pop(chatid)
                    self.db.set('–î—É—ç–ª—å–∫–∞', 'duel', duel)
                    return await message.respond('<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!')
                duel.setdefault(chatid, {})
                self.db.set('–î—É—ç–ª—å–∫–∞', 'duel', duel)

                async with message.client.conversation(message.chat_id) as conv:
                    response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                    await sleep(1)
                    await conv.send_message('–º–æ—è –∂–∞–±–∞')
                    response = await response
                    if "–ò–º—è –∂–∞–±—ã:" in response.text:
                        jaba = re.search('–ò–º—è –∂–∞–±—ã: (.+)', response.text).group(1)
                self.status[jb] = jaba
                self.db.set('Status', 'status', self.status)
                await message.respond(f'–ò–º—è –∂–∞–±—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {jaba}\n –≥–æ –¥—É—ç–ª–∏')
            if name +  " –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å" in message.message:
                await message.respond("<b>–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å</b>")
            if name + " –∏–Ω—Ñ–æ" in message.message:
                await message.respond('<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>')
            if name + " —Å —Ä–∞–±–æ—Ç—ã" in message.message:
                await message.respond('<b>–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É</b>')
            if message.sender_id not in {self.me.id}:
                if "–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä" in message.message:
                    await sleep (randelta+13)
                    async with message.client.conversation(chat) as conv:
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        await message.respond('–º–æ–π –±–∞–ª–∞–Ω—Å')
                        response = await response
                        if '–ë–∞–ª–∞–Ω—Å –±—É–∫–∞—à–µ–∫ –≤–∞—à–µ–π' in response.text:
                            bug = int(re.search('–∂–∞–±—ã: (\d+)', response.text, re.IGNORECASE).group(1))
                            if bug <100:
                                await message.reply('–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞')
                            else:
                                while bug > 50049:
                                    await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000')
                                    bug -= 50000
                                    await sleep(1)
                                snt = bug-50
                                await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}')
                if "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä" in message.message:
                    await sleep (randelta+13)
                    async with message.client.conversation(chat) as conv:
                        response = conv.wait_event(events.NewMessage(incoming=True, from_users=1124824021, chats=message.chat_id))
                        await message.respond('–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å')
                        response = await response
                        if '–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:' in response.text:
                            cnd = int(re.search('–õ–µ–¥–µ–Ω—Ü—ã: (\d+)', response.text, re.IGNORECASE).group(1))
                            apt = int(re.search('–ê–ø—Ç–µ—á–∫–∏: (\d+)', response.text, re.IGNORECASE).group(1))
                        if cnd > 0:
                            while cnd > 49:
                                await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50')
                                cnd -= 50
                                await sleep(1)
                            await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}')
                            await sleep(1)
                        if apt > 0:
                            if apt > 9:
                                await message.reply('–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10')
                            else:
                                await message.reply(f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}')

        if chatid not in duel: return

        if message.sender_id not in {self.me.id, 1124824021}:
            if "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message:
                await sleep (1)
                await message.reply('–¥—É—ç–ª—å')

        if message.sender_id in {1124824021}:
            if "–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + name in message.message:
                await sleep (1)
                await message.respond('–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å')
                await sleep (1)
                await message.respond('–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç')

            if self.status[jb] + ", –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message:
                await sleep (1)
                await message.respond('–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É')

            if "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message:
                if self.status[jb] + "!!!" in message.message:
                    if "–æ—Ç—ã–≥—Ä–∞–ª" in message.message:
                        await sleep (1)
                        await message.client.send_message(chat, f'{name} –¥—É—ç–ª—å–∫–∞')
                    else:
                        return
                else:
                    await sleep (1)
                    await message.respond('–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É')
