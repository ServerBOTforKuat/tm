from math import floor
from html import escape
from random import choice
from asyncio import sleep
from .. import loader, utils
from datetime import timedelta
from urllib.parse import quote_plus
from telethon.tl.types import Message
from telethon import events, functions, types, sync
import asyncio, datetime, inspect, io, json, logging, os, time, random, re, requests

logger = logging.getLogger(__name__)
asl = [
    "–∂–∞–±–∞ –¥–Ω—è",
    "—Ç–æ–ø –∂–∞–±",
    "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤",
    "–∫–ª–∞–Ω—ã",
    "–≤–∑—è—Ç—å –∂–∞–±—É",
]
def register(cb):
    cb(KramikkMod())

@loader.tds
class KramikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è!"""

    answers = {
        0: ("–ù–µ–≤–Ω—è—Ç–µ–Ω –≤–æ–ø—Ä–æ—Å, —Ö–∑, —á—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å",),
        1: ("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        2: ("–î–∞", "–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", "–ê–≥–∞"),
        3: ("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        4: (
            "–ó–Ω–∞—é –æ—Ç–≤–µ—Ç, –Ω–æ –Ω–µ —Å–∫–∞–∂—É",
            "–î—É–º–∞–π!",
            "–£–≥–∞–¥–∞–π-–∫–∞...",
            "–≠—Ç–æ –∑–∞–≥–∞–¥–∫–∞ –æ—Ç –ñ–∞–∫–∞ –§—Ä–µ—Å–∫–æ...",
        ),
        5: ("–ù–µ—Ç", "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç"),
        6: ("–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ", "–ö–æ–Ω–µ—á–Ω–æ", "–°—Ç–æ –ø—É–¥–æ–≤", "–ê–±—Å–æ–ª—é—Ç–Ω–æ", "–†–∞–∑—É–º–µ–µ—Ç—Å—è", "100%"),
        7: ("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        8: ("–î–∞, –Ω–æ –Ω–µ—Å–∫–æ—Ä–æ", "–î–∞, –Ω–æ –Ω–µ —Å–µ–π—á–∞—Å!"),
        9: ("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç"),
    }
    strings = {
        "name": "Kramikk",
        "update": "<b>–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞..</b>",
        "quest_answer": "\n\n<u>%answer%</u>",
        "mention": "<a href='tg://user?id=%id%'>%uname%</a>",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        clans = {
            "–ë–∞–≥oboty": -1001380664241,
            "–¢–æ–º –†—ç–¥–¥–ª": -1001441941681,
            "–ú–∞–Ω—É–ª—ã –∏ –ó–∞–π—á–∞—Ç–∫–∏": -1001289617428,
            "–ñ–∞–±–æ—Ç–æ—Ä—Ç": -1001436786642,
            ".": -1001409792751,
            "–∂–∞–±–∫–∏ –Ω—ç–ª—Å(–ø–ª–∞—Ç–æ–Ω)": -1001165420047,
            "–î–∏—Ä–∏–∂–∞–±–ª—å": -1001264330106,
            "–°–∫–∞–∑–æ—á–Ω—ã–π –¥–æ–Ω–∞—Ç–µ—Ä": -1001648008859,
            "–õ–∏—Å—Ç–∏–∫": -1001685708710,
            "–ñ–∞–±—ã –∞—Ñ–µ—Ä–∏—Å—Ç—ã –ö—Ä–∞–º –∏ –±–∞–±—É—à–∫–∞": -421815520,
            "–•—ç–ª–ª–æ –í–∏–Ω!": -1001426018704,
            "–¢–∞–Ω—Ü—ã –ø–æ —Å—Ä–µ–¥–∞–º": -1001481051409,
            "IELTS": -1001492669520,
            "–î–æ–º–∏–∫ –≤ –±–æ–ª–æ—Ç–µ": -1001520533176,
            "–ö–æ—Å–º–æ—Å –Ω–∞—Å –∂–¥–µ—Ç": -1001460270560,
            "Forbidden Frog": -1001511984124,
            "Vitoad": -1001771130958,
            "–ö—É—Ä—Å—ã –≤—ã—à–∏–≤–∞–Ω–∏—è": -1001760342148,
            "–ó–æ–ª–æ—Ç–∞—è –∂–∞–±–∞": -1001787904496,
            "LSDtoads": -1001493923839,
            "–¶—ã–≥–∞–Ω–∫–∞": -1001714871513,
            "–∂–∞–±—ã –ª–µ–Ω–∞": -1001419547228,
            "–ñ–∞–±–æ—á–∫–∞": -1001666737591,
            "AstroFrog": -1001575042525,
            "–ö–æ–Ω—Å–∏–ª–∏—É–º –∂–∞–±": -1001777552705,
            "–ñ–∞–±—å–∏ –º–æ–Ω—Å—Ç—Ä–∏–∫–∏": -1001427000422,
            "–ñ–∞–±—ã –í–µ—Ä–æ–Ω—ã": -1001256439407,
            "–ñ–∞–±—å–∏ —Å–ø–µ—Ü–∏–∏": -1001499700136,
            "–ë–æ–ª–æ—Ç–æ–∑–∞–≤—Ä": -1001624280659,
        }
        self.clans = clans
        self.client = client
        self.db = db
        self.me = await client.get_me()
        self.status = db.get("Status", "status", {})

    async def watcher(self, message):
        asly = random.choice(asl)
        bak = {
            1709411724,
            1261343954,
            1785723159,
            1486632011,
            547639600,
            449434040,
            388412512,
            553299699,
            412897338,
        }
        chat = message.chat_id
        chatid = str(chat)
        chatik = 1602929748
        duel = self.db.get("–î—É—ç–ª—å–∫–∞", "duel", {})
        EK = {}
        KW = {}
        rn = [7, 13, 21, 33, 42]
        aa = random.choice(rn)
        if "–≤–∑—è—Ç—å –∂–∞–±—É" in asly:
            aa = aa * 3
        elif "—Ç–æ–ø –∂–∞–±" in asly:
            aa = aa + 7
        elif "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤" in asly:
            aa = aa + 13
        elif "—Ç–æ–ø –∂–∞–±" in asly:
            aa = aa + 21
        else:
            aa = aa + 33
        a1 = self.me.id % 100 + aa
        if a1 > 81:
            a1 = a1 - 42
        else:
            a1 = a1 + 27
        a2 = random.randint(1, 131)
        if a2 > a1:
            randelta = random.randint(a1, a2)
        else:
            randelta = random.randint(3, aa)
        if self.me.id in {1261343954}:
            EK = {
                -1001441941681,
                -1001436786642,
                -1001380664241,
                -1001289617428,
                -1001485617300,
                -1001465870466,
                -1001169549362,
                -1001543064221,
            }
            ninja = {
                -1001380664241,
                -1001441941681,
                -1001289617428,
                -1001436786642,
                -1001465870466,
                -1001447960786,
                -1001290958283,
                -1001485617300,
            }
            KW = {-419726290, -1001543064221, -577735616, -1001493923839}
            name = "–ú–æ–Ω–∞—Ä—Ö"

            if "–ª–≤–ª —á–µ–∫" in message.message and message.sender_id in bak:
                x = int(message.message.split(" ", 3)[2])
                u = int(message.message.split(" ", 3)[3])
                y = ((x + u) - 160) * 2
                if y > -1:
                    res = f"<b>~ {y} –ª–≤–ª</b>"
                else:
                    res = f"<b>–ª–≤–ª –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º!!!\n–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ, –Ω–∞–ø–∏—à–∏:\n\n<code>–ª–≤–ª —á–µ–∫ 160 90</code></b>"
                await utils.answer(message, res)

            elif message.message.startswith("–ê–ª–ª–æ") and chat in ninja and message.sender_id in {1124824021}:
                capt = re.search(
                    "–î–ª—è –∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", message.text
                )
                if capt:
                    mk = capt.group(1)
                    ek = capt.group(2)
                    war = f"{mk} –ø—Ä–æ—Ç–∏–≤ –∫–ª–∞–Ω–∞ {ek}"
                    await self.client.send_message(1767017980, f"‚ö°Ô∏è –ö–ª–∞–Ω {war}")

            elif (message.message.startswith("–ù–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é") or message.message.startswith("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é") or message.message.startswith("@tgtoadbot –ù–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é")) and chat in ninja:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —Ç–æ–ª—å–∫–æ" in response.text:
                        ch = await message.client.get_entity(message.to_id)
                        await self.client.send_message(
                            1767017980,
                            f"<i>{message.sender.first_name} –≤ –ø–æ–∏—Å–∫–µ</i>\n—á–∞—Ç: {ch.title}",
                        )

            elif "[8üêù]" in message.message and message.sender_id in {830605725}:
                await message.click(0)
            elif "[4üêù]" in message.message and message.sender_id in {830605725}:
                await message.click(0)
            elif "[2‚ò¢Ô∏èüêù, 2üî¥üêù," in message.message and message.sender_id in {830605725}:
                await message.click(0)
            elif "–ë–∑–∑–∑–∑! –° –ø–∞—Å–µ–∫–∏" in message.message and message.sender_id in {830605725}:
                await message.click(0)

            elif "–§–∞—Ä–º–∞" in message.message and chat in {707693258}:
                await self.client.send_message(
                    chat, "–§–∞—Ä–º–∞", schedule=timedelta(minutes=random.randint(1, 20))
                )
            elif "–ù–ï–ó–ê–ß–Å–¢!" in message.message and chat in {707693258}:
                args = [int(x) for x in message.text.split() if x.isnumeric()]
                randelta = random.randint(20, 60)
                if len(args) == 4:
                    delta = timedelta(
                        hours=args[1], minutes=args[2], seconds=args[3] + 13
                    )
                elif len(args) == 3:
                    delta = timedelta(minutes=args[1], seconds=args[2] + 13)
                elif len(args) == 2:
                    delta = timedelta(seconds=args[1] + 13)
                else:
                    pass
                sch = (
                    await self.client(
                        functions.messages.GetScheduledHistoryRequest(chat, 1488)
                    )
                ).messages
                await self.client(
                    functions.messages.DeleteScheduledMessagesRequest(
                        chat, id=[x.id for x in sch]
                    )
                )
                await self.client.send_message(chat, "–§–∞—Ä–º–∞", schedule=delta)
            else:
                pass

        elif self.me.id in {1486632011}:
            name = "–û–±–æ—Ç–∏"
            EK = {
                -1001441941681,
                -1001465870466,
                -1001403626354,
                -1001380664241,
                -1001290958283,
                -1001447960786,
            }
            KW = {-1001465870466}

        elif self.me.id in {1286303075}:
            name = "–õ–∞–≤–∏–Ω"
        elif self.me.id in {1785723159}:
            name = "–ö—Ä–∞–º–∏–∫"
        elif self.me.id in {980699009}:
            chatik = -1001441941681
            name = "–õ–µ–Ω–∞"
        elif self.me.id in {1863720231}:
            name = "dop"
        elif self.me.id in {1709411724}:
            name = "moo"
        elif self.me.id in {1423368454}:
            name = "LEN"
        elif self.me.id in {1646740346}:
            name = "Kuat"
        elif self.me.id in {1682801197}:
            name = "666"
        elif self.me.id in {1746686703}:
            name = "Alu"
        elif self.me.id in {1459363960}:
            name = "–ê–ª—å–±–µ—Ä—Ç"
        elif self.me.id in {547639600}:
            name = "–ù–µ–ª—å—Å"
        elif self.me.id in {887255479}:
            name = "–ö–∏—Ä–∞"
        else:
            name = self.me.first_name
        if (
            "–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: " + self.me.first_name in message.message
            and message.mentioned and message.sender_id in {1124824021}
        ):
            await message.click(0)
        elif (
            "–ì–æ—Å–ø–æ–¥–∏–Ω " + self.me.first_name in message.message
            and message.mentioned and message.sender_id in {1124824021}
        ):
            await sleep(randelta)
            await utils.answer(message, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
            await utils.answer(message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∑–∞ –∫–∞—Ä—Ç–æ–π")

        elif (message.message.startswith(name) or message.message.endswith('üòâ')) and message.sender_id in bak:
            if "?" in message.message:
                uname = message.sender.first_name
                words = re.findall(r"\w+", f"{uname} {message.message}")
                words_len = [words.__len__()] + [x.__len__() for x in words]
                i = words_len.__len__()
                while i > 1:
                    i -= 1
                    for x in range(i):
                        words_len[x] = (
                            words_len[x] + words_len[x + 1] - 9
                            if words_len[x] + words_len[x + 1] > 9
                            else words_len[x] + words_len[x + 1]
                        )
                await utils.answer(message,
                    self.strings["mention"]
                    .replace("%id%", str(message.sender_id))
                    .replace("%uname%", uname)
                    + ":\n"
                    + message.message
                    + f'\n\n{" |"*words_len[0]}'
                    + self.strings["quest_answer"].replace(
                        "%answer%", choice(self.answers[words_len[0]])
                    )
                )
            elif "–Ω–∞–ø–∞–¥–∏" in message.message:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await utils.answer(message, "<b>–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω</b>")
                    response = await response
                    if "–í–∞—à–∞ –∂–∞–±–∞ –Ω–∞" in response.text:
                        await utils.answer(message, '–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É')
                        await utils.answer(message, '—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É')
                        await utils.answer(message, '–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω')
                    elif "–í–∞—à–∞ –∂–∞–±–∞ —Å–µ–π—á–∞—Å" in response.text:
                        await utils.answer(message, "–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è")
                        await utils.answer(message, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await utils.answer(message, "–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                    else:
                        await utils.answer(message, "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–µ–¥–µ–Ω–µ—Ü")
            elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in message.message:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await utils.answer(message,
                        "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                    )
                    response = await response
                    if "–ü–æ–∂–∞–ª–µ–π—Ç–µ –∂–∞–±—É," in response.text:
                        await utils.answer(message, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                        await utils.answer(message, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await utils.answer(message,
                            "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                        )
                    elif "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in response.text:
                        await utils.answer(message, "–¥—É—ç–ª—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å")
                        await utils.answer(message, "–¥—É—ç–ª—å –æ—Ç–æ–∑–≤–∞—Ç—å")
                        await utils.answer(message,
                            "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                        )
                    elif "–í–∞—à–∞ –∂–∞–±–∞ –ø—Ä–∏" in response.text:
                        await utils.answer(message, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await utils.answer(message,
                            "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                        )
                    else:
                        await utils.answer(message, "—Ä–µ–π–¥ –∏–Ω—Ñ–æ")
            elif "–¥—É—ç–ª—å–∫–∞" in message.message:
                if chatid in duel:
                    duel.pop(chatid)
                    self.db.set("–î—É—ç–ª—å–∫–∞", "duel", duel)
                    return await utils.answer(message, "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!")
                duel.setdefault(chatid, {})
                self.db.set("–î—É—ç–ª—å–∫–∞", "duel", duel)
                async with self.client.conversation(
                    message.chat_id
                ) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await conv.send_message("–º–æ—è –∂–∞–±–∞")
                    response = await response
                    if "–ò–º—è –∂–∞–±—ã:" in response.text:
                        jaba = re.search(
                            "–ò–º—è –∂–∞–±—ã: (.+)", response.text
                        ).group(1)
                        self.status["–ò–º—è –ñ–∞–±—ã"] = jaba
                        self.db.set("Status", "status", self.status)
                await utils.answer(message, f"–ò–º—è –∂–∞–±—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {jaba}")
                await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
            elif "–æ–±—â–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å" in message.message:
                inv = await utils.answer(message, "<b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞...</b>")
                uid = message.from_id
                prit = "<b>–ú–æ–π –æ–±—â–∏–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:</b>"
                for clan_name, clan_id in self.clans.items():
                    async with self.client.conversation(clan_id) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=clan_id,
                            )
                        )
                        await conv.send_message("–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
                        response = await response
                        if "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:" in response.text:
                            caption = re.search(
                                "üç¨–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", response.text
                            ).group(1)
                            caption1 = re.search(
                                "üíä–ê–ø—Ç–µ—á–∫–∏: (\d+)", response.text
                            ).group(1)
                            caption2 = re.search(
                                "üó∫–ö–∞—Ä—Ç–∞ –±–æ–ª–æ—Ç–∞: (\d+)", response.text
                            ).group(1)
                            caption3 = re.search(
                                "üê∏–ñ–∞–±—É–ª–∏ –¥–ª—è –±–∞–Ω–¥—ã: (.+)", response.text
                            ).group(1)
                            prit += f"\n\n{clan_name}\nüç¨–õ–µ–¥–µ–Ω—Ü—ã: {caption}\nüíä–ê–ø—Ç–µ—á–∫–∏: {caption1}\nüó∫–ö–∞—Ä—Ç–∞ –±–æ–ª–æ—Ç–∞: {caption2}\nüê∏–ñ–∞–±—É–ª–∏ –¥–ª—è –±–∞–Ω–¥—ã: {caption3}"
                            await sleep(0.69)
                prit += f"\n{uid}\n{message.id}"
                await utils.answer(inv, prit)
            else:
                args = message.message
                reply = await message.get_reply_message()
                count = args.split(" ", 2)[1]

                if count.isnumeric() and reply:
                    count = int(args.split(" ", 3)[1])
                    mmsg = args.split(" ", 3)[3]
                    time = int(args.split(" ", 3)[2])
                    for _ in range(count):
                        await reply.reply(mmsg)
                        await sleep(time)
                elif count.isnumeric():
                    count = int(args.split(" ", 3)[1])
                    mmsg = args.split(" ", 3)[3]
                    time = int(args.split(" ", 3)[2])
                    for _ in range(count):
                        await self.client.send_message(chat, mmsg)
                        await sleep(time)
                else:
                    mmsg = args.split(" ", 1)[1]
                    if reply:
                        await reply.reply(mmsg)
                    else:
                        await utils.answer(message, mmsg)
        elif "–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä" in message.message and message.sender_id in bak:
            await sleep(randelta)
            async with self.client.conversation(chat) as conv:
                response = conv.wait_event(
                    events.NewMessage(
                        incoming=True,
                        from_users=1124824021,
                        chats=message.chat_id,
                    )
                )
                await utils.answer(message, "–º–æ–π –±–∞–ª–∞–Ω—Å")
                response = await response
                if "–ë–∞–ª–∞–Ω—Å –±—É–∫–∞—à–µ–∫ –≤–∞—à–µ–π" in response.text:
                    bug = int(
                        re.search(
                            "–∂–∞–±—ã: (\d+)", response.text, re.IGNORECASE
                        ).group(1)
                    )
                    if bug < 100:
                        await message.reply("–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞")
                    else:
                        while bug > 50049:
                            await message.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000")
                            bug -= 50000
                        snt = bug - 50
                        await message.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}")
        elif "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä" in message.message and message.sender_id in bak:
            await sleep(randelta)
            async with self.client.conversation(chat) as conv:
                response = conv.wait_event(
                    events.NewMessage(
                        incoming=True,
                        from_users=1124824021,
                        chats=message.chat_id,
                    )
                )
                await utils.answer(message, "–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
                response = await response
                if "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:" in response.text:
                    cnd = int(
                        re.search(
                            "–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", response.text, re.IGNORECASE
                        ).group(1)
                    )
                    apt = int(
                        re.search(
                            "–ê–ø—Ç–µ—á–∫–∏: (\d+)", response.text, re.IGNORECASE
                        ).group(1)
                    )
                if cnd > 0:
                    if cnd > 49:
                        await message.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50")
                    else:
                        await message.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}")
                if apt > 0:
                    if apt > 9:
                        await message.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10")
                    else:
                        await message.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}")
        elif message.message.startswith(asly) and chat in EK and message.sender_id in bak:
            await sleep(randelta)
            sch = (
                await self.client(
                    functions.messages.GetScheduledHistoryRequest(chat, 0)
                )
            ).messages
            await self.client(
                functions.messages.DeleteScheduledMessagesRequest(
                    chat, id=[x.id for x in sch]
                )
            )
            async with self.client.conversation(message.chat_id) as conv:
                response = conv.wait_event(
                    events.NewMessage(
                        incoming=True,
                        from_users=1124824021,
                        chats=message.chat_id,
                    )
                )
                await utils.answer(message, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ")
                response = await response
                if "–ù—É-–∫–∞ –ø–æ–¥–æ–∂–¥–∏," in response.text:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await utils.answer(message, "—Ä–µ–π–¥ –∏–Ω—Ñ–æ")
                    response = await response
                    if "–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º" in response.text:
                        count = len(
                            re.findall(
                                "‚Ä¢ ",
                                response.text.split(
                                    sep="–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º –ø–æ–¥–∑–µ–º–µ–ª—å–µ:"
                                )[1],
                            )
                        )
                        if count > 2:
                            response = conv.wait_event(
                                events.NewMessage(
                                    incoming=True,
                                    from_users=1124824021,
                                    chats=message.chat_id,
                                )
                            )
                            await utils.answer(message, "–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
                            response = await response
                            if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message,
                                    "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏"
                                )
                            if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message,
                                    "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç"
                                )
                            if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message,
                                    "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏"
                                )
                            if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message,
                                    "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏"
                                )
                            if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message,
                                    "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏"
                                )
                            if "–ë–∞–Ω–¥–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                                await utils.answer(message, "—Å–æ–±—Ä–∞—Ç—å –±–∞–Ω–¥—É")
                            await sleep(randelta)
                            await utils.answer(message, "—Ä–µ–π–¥ —Å—Ç–∞—Ä—Ç")
                elif "–î–ª—è –≤—Ö–æ–¥–∞ –≤" in response.text:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await utils.answer(message, "–ú–æ—è –∂–∞–±–∞")
                    response = await response
                    if "–ò–º—è –∂–∞–±—ã:" in response.text:
                        bug = int(
                            re.search(
                                "–ë—É–∫–∞—à–∫–∏: (\d+)",
                                response.text,
                                re.IGNORECASE,
                            ).group(1)
                        )
                        nas = int(
                            re.search(
                                "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.?:.+\((\d+)\)",
                                response.text,
                                re.IGNORECASE,
                            ).group(1)
                        )
                        if nas < 500:
                            led = int((500 - nas) / 25)
                            if led > 0:
                                await utils.answer(message,
                                    f"–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {led}"
                                )
                else:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await utils.answer(message, "–∂–∞–±–∞ –∏–Ω—Ñ–æ")
                    response = await response
                    if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                        time_f = re.search(
                            "–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                            response.text,
                            re.IGNORECASE,
                        )
                        if time_f:
                            hrs = int(time_f.group(1))
                            min = int(time_f.group(2))
                            delta = timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                        await self.client.send_message(
                            chat, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                        )
                    else:
                        await utils.answer(message, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                        delta = timedelta(hours=4, seconds=3)
                        await self.client.send_message(
                            chat, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                        )
                    for number in range(4):
                        delta = delta + timedelta(hours=4)
                        await self.client.send_message(
                            chat, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                        )
                    if "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in response.text:
                        dng_s = re.search(
                            "–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º.",
                            response.text,
                            re.IGNORECASE,
                        )
                        if dng_s:
                            hrs = int(dng_s.group(1))
                            min = int(dng_s.group(2))
                            delta = timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                        await self.client.send_message(
                            chat, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            chat,
                            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                            schedule=delta + timedelta(seconds=13),
                        )
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=message.chat_id,
                            )
                        )
                        await utils.answer(message, "–ú–æ—è —Å–µ–º—å—è")
                        response = await response
                        if "–í–∞—à –∂–∞–±—ë–Ω—ã—à:" in response.text:
                            if "–ú–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                sem = re.search(
                                    "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if sem:
                                    hrs = int(sem.group(1))
                                    min = int(sem.group(2))
                                delta = timedelta(
                                    hours=hrs, minutes=min, seconds=3
                                )
                                await self.client.send_message(
                                    chat,
                                    "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞",
                                    schedule=delta,
                                )
                            else:
                                await utils.answer(message, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞")
                            if "–ú–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                sad = re.search(
                                    "–∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if sad:
                                    hrs = int(sad.group(1))
                                    min = int(sad.group(2))
                                    delta = timedelta(
                                        hours=hrs, minutes=min, seconds=3
                                    )
                                    await self.client.send_message(
                                        chat,
                                        "–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞",
                                        schedule=delta,
                                    )
                            else:
                                await utils.answer(message, "–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞")
                            if "–ü–æ–π—Ç–∏ –Ω–∞ –º–∞—Ö–∞—á" in response.text:
                                sad = re.search(
                                    "–º–∞—Ö–∞—á —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if sad:
                                    hrs = int(sad.group(1))
                                    min = int(sad.group(2))
                                    delta = timedelta(
                                        hours=hrs, minutes=min, seconds=3
                                    )
                                    await self.client.send_message(
                                        chat,
                                        "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á",
                                        schedule=delta,
                                    )
                            else:
                                await utils.answer(message,
                                    "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á"
                                )
                            response = conv.wait_event(
                                events.NewMessage(
                                    incoming=True,
                                    from_users=1124824021,
                                    chats=message.chat_id,
                                )
                            )
                            await self.client.send_message(
                                chat, "–≤–æ–π–Ω–∞ –∏–Ω—Ñ–æ"
                            )
                            response = await response
                            if "‚öîÔ∏è–°–æ—Å—Ç–æ—è–Ω–∏–µ‚öîÔ∏è: –ù–µ" in response.text:
                                if message.chat_id in KW:
                                    await utils.answer(message,
                                        "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É"
                                    )
                    else:
                        dng_s = re.search(
                            "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                            response.text,
                            re.IGNORECASE,
                        )
                        if dng_s:
                            hrs = int(dng_s.group(1))
                            min = int(dng_s.group(2))
                            delta = timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                            await self.client.send_message(
                                chat, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                            )
                            await self.client.send_message(
                                chat,
                                "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±–∫—É",
                                schedule=delta
                                + timedelta(minutes=25, seconds=3),
                            )
                            await self.client.send_message(
                                chat,
                                "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                                schedule=delta
                                + timedelta(minutes=45, seconds=13),
                            )
        elif message.message.startswith(asly) and message.sender_id in bak:
            await sleep(randelta)
            sch = (
                await self.client(
                    functions.messages.GetScheduledHistoryRequest(chat, 0)
                )
            ).messages
            await self.client(
                functions.messages.DeleteScheduledMessagesRequest(
                    chat, id=[x.id for x in sch]
                )
            )
            async with self.client.conversation(message.chat_id) as conv:
                response = conv.wait_event(
                    events.NewMessage(
                        incoming=True,
                        from_users=1124824021,
                        chats=message.chat_id,
                    )
                )
                await utils.answer(message, "–∂–∞–±–∞ –∏–Ω—Ñ–æ")
                response = await response
                if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                    time_n = re.search(
                        "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                        response.text,
                        re.IGNORECASE,
                    )
                    if time_n:
                        hrs = int(time_n.group(1))
                        min = int(time_n.group(2))
                        delta = timedelta(hours=hrs, minutes=min, seconds=3)
                    await self.client.send_message(
                        chat, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                else:
                    delta = timedelta(hours=6, seconds=3)
                    await utils.answer(message, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                for number in range(3):
                    delta = delta + timedelta(hours=6, seconds=3)
                    await self.client.send_message(
                        chat, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in response.text:
                    time_j = re.search(
                        "–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                        response.text,
                        re.IGNORECASE,
                    )
                    if time_j:
                        hrs = int(time_j.group(1))
                        min = int(time_j.group(2))
                        delta = timedelta(hours=hrs, minutes=min, seconds=3)
                    await self.client.send_message(
                        chat, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        chat,
                        "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                        schedule=delta + timedelta(seconds=13),
                    )
                    for number in range(2):
                        delta = delta + timedelta(hours=8)
                        await self.client.send_message(
                            chat, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            chat,
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + timedelta(seconds=13),
                        )
                        await self.client.send_message(
                            chat,
                            "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                            schedule=delta + timedelta(hours=2, seconds=13),
                        )
                if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in response.text:
                    time_r = re.search(
                        "—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                        response.text,
                        re.IGNORECASE,
                    )
                    if time_r:
                        hrs = int(time_r.group(1))
                        min = int(time_r.group(2))
                        delta = timedelta(hours=hrs, minutes=min, seconds=3)
                    await self.client.send_message(
                        chat, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in response.text:
                    await utils.answer(message, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await utils.answer(message, "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                    delta = timedelta(hours=2, seconds=3)
                    await self.client.send_message(
                        chat, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                else:
                    await utils.answer(message, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    delta = timedelta(hours=6)
                for number in range(2):
                    delta = delta + timedelta(hours=6, seconds=3)
                    await self.client.send_message(
                        chat, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        chat,
                        "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                        schedule=delta + timedelta(seconds=3),
                    )
                    await self.client.send_message(
                        chat,
                        "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                        schedule=delta + timedelta(hours=2, seconds=13),
                    )
        else:
            pass
        if chatid not in duel:
            return
        if message.sender_id not in {self.me.id, 1124824021}:
            if "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message:
                await sleep(randelta)
                await message.reply("–¥—É—ç–ª—å")
        if message.sender_id in {1124824021}:
            if (
                "–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é " + self.me.first_name
                in message.message
            ):
                await sleep(randelta)
                await utils.answer(message, "–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å")
                await sleep(randelta)
                await utils.answer(message, "–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç")
            if "–ò–º—è –ñ–∞–±—ã" in self.status:
                if self.status["–ò–º—è –ñ–∞–±—ã"] + ", –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message:
                    await sleep(randelta)
                    await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")

                if "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message:
                    if self.status["–ò–º—è –ñ–∞–±—ã"] + "!!!" in message.message:
                        if "–æ—Ç—ã–≥—Ä–∞–ª" in message.message:
                            duel.pop(chatid)
                            self.db.set("–î—É—ç–ª—å–∫–∞", "duel", duel)
                            await utils.answer(message,
                                "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!"
                            )
                        else:
                            pass
                    else:
                        await sleep(randelta)
                        await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
