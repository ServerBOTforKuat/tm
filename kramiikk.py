import asyncio
import datetime
import logging
import random
import re

from telethon import events, functions

from .. import loader

logger = logging.getLogger(__name__)

RESPONSE = None

bak = [
    1785723159,
    1261343954,
    1377037394,
    635396952,
    547639600,
    553299699,
    412897338,
    449434040,
    388412512,
]


@loader.tds
class KramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    answers = {
        0: ("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        1: ("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        2: ("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        3: ("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç"),
    }
    strings = {"name": "kramiikk", "quest_answer": "<i>%answer%</i>"}

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        """.

        ----------

        """
        self.client = client
        self.db = db
        self.me = await client.get_me()

    async def err(self, m, p, s):
        """.

        ----------

        """
        try:
            async with self.client.conversation(m.chat_id) as conv:
                await s
                global RESPONSE
                RESPONSE = await conv.wait_event(
                    events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
                )
                await conv.cancel_all()
        except asyncio.exceptions.TimeoutError:
            pass

    async def watcher(self, m):
        """.

        ----------

        """
        if self.me.id in {1486632011}:
            name = "–æ–±–æ—Ç–∏"
        elif self.me.id in {1286303075}:
            name = "–ª–∞–≤–∏–Ω"
        elif self.me.id in {1785723159}:
            name = "–∫—Ä–∞–º–∏–∫"
        elif self.me.id in {547639600}:
            name = "–Ω–µ–ª—å—Å"
        elif self.me.id in {980699009}:
            name = "–ª–µ–Ω–∞"
        elif self.me.id in {1423368454}:
            name = "len"
        elif self.me.id in {230473666}:
            name = "–≤–∞–Ω—è"
        elif self.me.id in {887255479}:
            name = "–∫–∏—Ä–∞"
        else:
            name = self.me.first_name
        if (
            m.message.lower().startswith((name, f"@{self.me.username}"))
            or (name in m.message and m.message.endswith("üòâ"))
        ) and m.sender_id in bak:
            args = m.text
            reply = await m.get_reply_message()
            count = args.split(" ", 2)[1]
            if m.raw_text.endswith("?"):
                words = re.findall(r"\w+", f"{m.text}")
                words_len = [words.__len__()] + [x.__len__() for x in words]
                i = words_len.__len__()
                while i > 1:
                    i -= 1
                    for s in range(i):
                        words_len[s] = (
                            words_len[s] + words_len[s + 1] - 3
                            if words_len[s] + words_len[s + 1] > 3
                            else words_len[s] + words_len[s + 1]
                        )
                await m.reply(
                    self.strings["quest_answer"].replace(
                        "%answer%", random.choice(self.answers[words_len[0]])
                    )
                )
            elif "–Ω–∞–ø–∏—à–∏ –≤" in m.message:
                i = args.split(" ", 4)[3]
                if i.isnumeric():
                    i = int(i)
                s = args.split(" ", 4)[4]
                if reply:
                    s = reply
                await self.client.send_message(i, s)
            elif "—Ä–µ–ø–ª–∞–π" in m.message:
                i = args.split(" ", 4)[2]
                if i.isnumeric():
                    i = int(i)
                p = args.split(" ", 4)[3]
                if p.isnumeric():
                    p = int(p)
                i = await self.client.get_messages(i, ids=p)
                s = args.split(" ", 4)[4]
                if reply:
                    s = reply
                await i.reply(s)
            elif "reply" in m.message:
                await m.respond(reply)
            elif "–∞—Ä–µ–Ω–∞" in m.message:
                p = "‚Ä¢"
                s = self.client.send_message(m.chat_id, "<b>–º–æ–∏ –∂–∞–±—ã</b>")
                await self.err(m, p, s)
                capt = re.findall(r"\| -100(\d+)", RESPONSE.text)
                for i in capt:
                    await self.client.send_message(int(i), "<b>—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É</b>")
                    await self.client.send_message(int(i), "<b>–Ω–∞ –∞—Ä–µ–Ω—É</b>")
            elif "–Ω–∞–ø–∞–¥–∏" in m.message:
                p = None
                s = self.client.send_message(m.chat_id, "<b>–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω</b>")
                await self.err(m, p, s)
                if "–í–∞—à–∞ –∂–∞–±–∞ –Ω–∞" in RESPONSE.text:
                    await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                elif "–í–∞—à–∞ –∂–∞–±–∞ —Å–µ–π—á–∞—Å" in RESPONSE.text:
                    await m.respond("–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
            elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in m.message:
                p = None
                s = self.client.send_message(
                    m.chat_id, "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                )
                await self.err(m, p, s)
                if "–ü–æ–∂–∞–ª–µ–π—Ç–µ –∂–∞–±—É," in RESPONSE.text:
                    await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                elif "–í–∞—à–∞ –∂–∞–±–∞ –ø—Ä–∏" in RESPONSE.text:
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                else:
                    await m.respond("<b>—Ä–µ–π–¥ –∏–Ω—Ñ–æ</b>")
            elif "—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ" in m.message:
                p = "–í–∞—à–µ"
                s = self.client.send_message(m.chat_id, "<b>–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</b>")
                await self.err(m, p, s)
                if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏")
                if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç")
                if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                else:
                    await m.respond("–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
            elif "–ª–≤–ª —á–µ–∫" in m.message:
                s = (
                    (int(m.text.split(" ", 4)[3]) + int(m.text.split(" ", 4)[4])) - 160
                ) * 2
                if s > -1:
                    await m.reply(f"<b>~ {s} –ª–≤–ª</b>")
            elif "—Ç—É—Å–∞" in m.message:
                await m.respond("–∂–∞–±—É –Ω–∞ —Ç—É—Å—É")
            elif "–≥–æ –∫–≤" in m.message:
                await m.respond("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É")
            elif count.isnumeric() and reply:
                count = int(args.split(" ", 3)[1])
                mmsg = args.split(" ", 3)[3]
                time = int(args.split(" ", 3)[2])
                for i in range(count):
                    await reply.reply(mmsg)
                    await asyncio.sleep(time)
            elif count.isnumeric():
                count = int(args.split(" ", 3)[1])
                mmsg = args.split(" ", 3)[3]
                time = int(args.split(" ", 3)[2])
                for i in range(count):
                    await m.reply(mmsg)
                    await asyncio.sleep(time)
            else:
                mmsg = args.split(" ", 2)[2]
                if reply:
                    await reply.reply(mmsg)
                else:
                    await m.respond(mmsg)
        elif m.message.lower().startswith("–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä") and m.sender_id in bak:
            await asyncio.sleep(random.randint(1, 13))
            p = "–ë–∞–ª–∞–Ω—Å"
            s = self.client.send_message(m.chat_id, "<b>–º–æ–π –±–∞–ª–∞–Ω—Å</b>")
            await self.err(m, p, s)
            bug = int(re.search(r"–∂–∞–±—ã: (\d+)", RESPONSE.text, re.IGNORECASE).group(1))
            if bug < 100:
                await m.reply("–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞")
            else:
                while bug > 50049:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000")
                    bug -= 50000
                snt = bug - 50
                await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}")
        elif m.message.lower().startswith("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä") and m.sender_id in bak:
            await asyncio.sleep(random.randint(1, 13))
            p = "–í–∞—à"
            s = self.client.send_message(m.chat_id, "<b>–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å</b>")
            await self.err(m, p, s)
            cnd = int(
                re.search(r"–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", RESPONSE.text, re.IGNORECASE).group(1)
            )
            apt = int(
                re.search(r"–ê–ø—Ç–µ—á–∫–∏: (\d+)", RESPONSE.text, re.IGNORECASE).group(1)
            )
            if cnd > 0:
                if cnd > 49:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50")
                else:
                    await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}")
                if apt > 9:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10")
                else:
                    await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}")
        elif f"–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: {self.me.first_name}" in m.message and m.buttons:
            await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
            await m.click(0)
        elif m.message.lower().startswith(
            ("–∂–∞–±–∞ –∏–Ω—Ñ–æ", "@toadbot –∂–∞–±–∞")
        ) and m.sender_id in {1785723159, 1261343954}:
            sch = (
                await self.client(
                    functions.messages.GetScheduledHistoryRequest(m.chat_id, 0)
                )
            ).messages
            await self.client(
                functions.messages.DeleteScheduledMessagesRequest(
                    m.chat_id, id=[x.id for x in sch]
                )
            )
            delta = datetime.timedelta(seconds=7)
            p = None
            s = self.client.send_message(
                    m.chat_id, "–º–æ—è –±–∞–Ω–¥–∞", schedule=delta
                )
            await self.err(m, p, s)
            if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RESPONSE.text:
                time_f = re.search(
                    r"–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                    RESPONSE.text,
                    re.IGNORECASE,
                )
                delta = datetime.timedelta(
                    hours=int(time_f.group(1)),
                    minutes=int(time_f.group(2)),
                    seconds=3,
                )
                await self.client.send_message(
                    m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                )
            else:
                await self.client.send_message(m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                delta = datetime.timedelta(hours=4, seconds=3)
                await self.client.send_message(
                    m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                )
            for i in range(4):
                delta = delta + datetime.timedelta(hours=4)
                await self.client.send_message(
                    m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                )
            if "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in RESPONSE.text:
                dng_s = re.search(
                    r"–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º.",
                    RESPONSE.text,
                    re.IGNORECASE,
                )
                delta = datetime.timedelta(
                    hours=int(dng_s.group(1)),
                    minutes=int(dng_s.group(2)),
                    seconds=3,
                )
                await self.client.send_message(
                    m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                )
                await self.client.send_message(
                    m.chat_id,
                    "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                    schedule=delta + datetime.timedelta(seconds=13),
                )
                if int(dng_s.group(1)) > 1:
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                    delta = datetime.timedelta(hours=2, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                for i in range(2):
                    delta = delta + datetime.timedelta(hours=6, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                        schedule=delta + datetime.timedelta(seconds=3),
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                        schedule=delta + datetime.timedelta(hours=2, seconds=13),
                    )
            elif "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±—É –º–æ–∂–Ω–æ" in RESPONSE.text:
                dng_s = re.search(
                    r"–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                    RESPONSE.text,
                    re.IGNORECASE,
                )
                delta = datetime.timedelta(
                    hours=int(dng_s.group(1)),
                    minutes=int(dng_s.group(2)),
                    seconds=3,
                )
                await self.client.send_message(
                    m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                )
                await self.client.send_message(
                    m.chat_id,
                    "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±–∫—É",
                    schedule=delta + datetime.timedelta(minutes=25, seconds=3),
                )
                await self.client.send_message(
                    m.chat_id,
                    "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                    schedule=delta + datetime.timedelta(minutes=45, seconds=13),
                )
