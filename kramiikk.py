import asyncio
import logging
import re

from telethon import events
from datetime import timedelta

from .. import loader

logger = logging.getLogger(__name__)

bak = [
    1785723159,
    1377037394,
    1261343954,
    1015477223,
    880446774,
    635396952,
    547639600,
    553299699,
    412897338,
    449434040,
    388412512,
]


@loader.tds
class KramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    strings = {"name": "kramiikk"}

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.me = await client.get_me()

    async def uku(self, m, cmn, txt):
        time = re.search(
            txt,
            RSP.text,
            re.IGNORECASE,
        )
        await self.client.send_message(
            m.chat_id,
            cmn,
            schedule=timedelta(hours=int(time.group(1)), minutes=int(time.group(2))),
        )

    async def err(self, m, p):
        try:
            async with self.client.conversation(m.chat_id) as conv:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
                )
        except asyncio.exceptions.TimeoutError:
            pass

    async def watcher(self, m):
        if self.me.id in {1486632011}:
            name = "–û–±–æ—Ç–∏"
        elif self.me.id in {1286303075}:
            name = "–õ–∞–≤–∏–Ω"
        elif self.me.id in {1785723159}:
            name = "–ö—Ä–∞–º–∏–∫"
        elif self.me.id in {547639600}:
            name = "–ù–µ–ª—å—Å"
        elif self.me.id in {980699009}:
            name = "–õ–µ–Ω–∞"
        elif self.me.id in {1423368454}:
            name = "Len"
        elif self.me.id in {230473666}:
            name = "–í–∞–Ω—è"
        elif self.me.id in {887255479}:
            name = "–ö–∏—Ä–∞"
        elif self.me.id in {1266917477}:
            name = "–ê—Ä—Ç—É—Ä"
        else:
            name = self.me.first_name
        try:
            if (
                m.message.casefold().startswith((name, f"@{self.me.username}"))
            ) and m.sender_id in bak:
                args = m.text
                reply = await m.get_reply_message()
                if "–Ω–∞–ø–∏—à–∏ –≤" in m.message:
                    i = args.split(" ", 4)[3]
                    if i.isnumeric():
                        i = int(i)
                    s = args.split(" ", 4)[4]
                    if reply:
                        s = reply
                    await self.client.send_message(i, s)
                elif "–∞—Ä–µ–Ω–∞" in m.message:
                    p = "‚Ä¢"
                    await self.client.send_message(m.chat_id, "<b>–º–æ–∏ –∂–∞–±—ã</b>")
                    await self.err(m, p)
                    capt = re.findall(r"\| -100(\d+)", RSP.text)
                    for i in capt:
                        await self.client.send_message(int(i), "<b>–Ω–∞ –∞—Ä–µ–Ω—É</b>")
                elif "–Ω–∞–ø–∞–¥–∏" in m.message:
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in m.message:
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                elif "—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ" in m.message:
                    p = "–í–∞—à–µ"
                    await self.client.send_message(m.chat_id, "<b>–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</b>")
                    await self.err(m, p)
                    if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏")
                    if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç")
                    if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                    if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                    if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                else:
                    mmsg = args.split(" ", 2)[2]
                    if reply:
                        await reply.reply(mmsg)
                    else:
                        await m.respond(mmsg)
            elif (
                f"–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: {self.me.first_name}" in m.message and m.buttons
            ):
                await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                await m.click(0)
            elif (
                m.message.casefold().startswith(("–º–æ—è –∂–∞–±–∞", "@toadbot –º–æ—è –∂–∞–±–∞"))
                and m.sender_id == self.me.id
            ):
                p = "üê∏"
                await self.err(m, p)
                jab = re.search(r"–£—Ä–æ–≤–µ–Ω—å.+: (\d+)[\s\S]*–ë—É–∫–∞—à–∫–∏: (\d+)", RSP.raw_text)
                if int(jab.group(1)) > 72 and int(jab.group(2)) > 3750:
                    p = "üèÉ‚Äç‚ôÇÔ∏è"
                    await self.client.send_message(m.chat_id, "<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>")
                    await self.err(m, p)
                    cmn = "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É"
                    if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RSP.text:
                        txt = r"–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º"
                        await self.uku(m, cmn, txt)
                    else:
                        await self.client.send_message(m.chat_id, cmn)
                    if "–∂–∞–±—É —Å —Ä–∞–±–æ—Ç—ã" in RSP.text:
                        cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
                        await self.client.send_message(m.chat_id, cmn)
                        return await self.client.send_message(
                            m.chat_id, "<b>–º–æ—è –∂–∞–±–∞</b>"
                        )
                    if "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in RSP.text:
                        cmn = "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ"
                        await self.client.send_message(m.chat_id, cmn)
                    elif (
                        "–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2—á"
                        and "–ñ–∞–±—É –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in RSP.text
                    ):
                        cmn = "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ"
                        await self.client.send_message(m.chat_id, cmn)
                        return await self.client.send_message(
                            m.chat_id, "<b>–º–æ—è –∂–∞–±–∞</b>"
                        )
                    elif "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±—É –º–æ–∂–Ω–æ" in RSP.text:
                        cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
                        txt = r"–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç"
                        await self.uku(m, cmn, txt)
                    elif "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in RSP.text:
                        cmn = "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ"
                        txt = r"–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º."
                        await self.uku(m, cmn, txt)
                else:
                    p = "üç≠"
                    await self.client.send_message(m.chat_id, "<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>")
                    await self.err(m, p)
                    if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RSP.text:
                        time_n = re.search(
                            r"–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                            RSP.text,
                            re.IGNORECASE,
                        )
                        delta = timedelta(
                            hours=int(time_n.group(1)),
                            minutes=int(time_n.group(2)),
                        )
                        await self.client.send_message(
                            m.chat_id, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                        )
                    else:
                        delta = timedelta(hours=6, seconds=3)
                        await m.respond("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                    for i in range(3):
                        delta = delta + timedelta(hours=6, seconds=3)
                        await self.client.send_message(
                            m.chat_id, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                        )
                    if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in RSP.text:
                        time = re.search(
                            r"–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                            RSP.text,
                            re.IGNORECASE,
                        )
                        delta = timedelta(
                            hours=int(time.group(1)),
                            minutes=int(time.group(2)),
                            seconds=3,
                        )
                        await self.client.send_message(
                            m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + timedelta(seconds=13),
                        )
                        for i in range(2):
                            delta = delta + timedelta(hours=8)
                            await self.client.send_message(
                                m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                            )
                            await self.client.send_message(
                                m.chat_id,
                                "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                schedule=delta + timedelta(seconds=13),
                            )
                            await self.client.send_message(
                                m.chat_id,
                                "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                                schedule=delta + timedelta(hours=2, seconds=13),
                            )
                    if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in RSP.text:
                        time = re.search(
                            r"—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                            RSP.text,
                            re.IGNORECASE,
                        )
                        delta = timedelta(
                            hours=int(time.group(1)),
                            minutes=int(time.group(2)),
                            seconds=3,
                        )
                        await self.client.send_message(
                            m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                        )
                    elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in RSP.text:
                        await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await m.respond("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                        delta = timedelta(hours=2, seconds=3)
                        await self.client.send_message(
                            m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                        )
                    else:
                        await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                        delta = timedelta(hours=6)
                    for i in range(2):
                        delta = delta + timedelta(hours=6, seconds=3)
                        await self.client.send_message(
                            m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + timedelta(seconds=3),
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                            schedule=delta + timedelta(hours=2, seconds=13),
                        )
            else:
                return
        finally:
            return
