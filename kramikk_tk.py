import asyncio
import datetime
import logging
import random
import re
from telethon import events, functions, types

from .. import loader, utils

logger = logging.getLogger(__name__)
asl = [
    "–∂–∞–±–∞ –¥–Ω—è",
    "—Ç–æ–ø –∂–∞–±",
    "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤",
    "–∫–ª–∞–Ω—ã",
    "–≤–∑—è—Ç—å –∂–∞–±—É",
]


def register(cb):
    cb(KramikkMod())


@loader.tds
class KramikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è!"""

    strings = {
        "name": "Kramikk",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.me = await client.get_me()
        self.status = db.get("Status", "status", {})

        #
        # async def statacmd(m):
        #     ph = str((await client.get_messages(m, search='–≤–∞—à –∫–ª–∞–Ω –¢–æ–º –†—ç–¥–¥–ª –æ–¥–µ—Ä–∂–∞–ª')).total)
        #     vi = str((await client.get_messages(m, search='–∫–ª–∞–Ω–∞ –¢–æ–º –†—ç–¥–¥–ª –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ –í–∞–¥–∏–º')).total)
        #     await client.send_message(m,
        #         ("<i>–ù–µ–ø–æ–ª–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è, —á–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ —Å–∫—Ä—ã—Ç—ã–µ</i>\n<b>üèÜ–¢–æ–º –†—ç–¥–¥–ª –æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥:</b> {}\n" +
        #          "<b>‚öúÔ∏è–∫–≤ –†—ç–¥–¥–ª–∞ —Å –í–∞–¥–∏–º–æ–º:</b> {}\n").format(ph, vi))
        # async def feets():
        #     await statacmd(OPPY)
        # scheduler = AsyncIOScheduler()
        # scheduler.add_job(feets, CronTrigger.from_crontab('*/33 * * * *', timezone='Asia/Almaty'))
        # scheduler.start()
        # asyncio.get_event_loop().run_forever()

    async def watcher(self, message):
        try:
            asly = random.choice(asl)
            bak = {
                1709411724,
                1261343954,
                1785723159,
                1486632011,
                547639600,
                449434040,
                388412512,
                553299699,
                412897338,
            }
            ch = message.client.get_entity(message.to_id)
            chat = message.chat_id
            chatid = str(chat)
            duel = self.db.get("–î—É—ç–ª—å–∫–∞", "duel", {})
            ninja = {
                -1001380664241,
                -1001441941681,
                -1001289617428,
                -1001436786642,
                -1001465870466,
                -1001447960786,
                -1001290958283,
                -1001485617300,
                -1001484924016,
            }
            nr = [11, 13, 17, 24, 33]
            OPPY = -1001655814348
            rc = random.choice(nr)
            if "–≤–∑—è—Ç—å –∂–∞–±—É" in asly:
                ac = rc * 3
            elif "—Ç–æ–ø –∂–∞–±" in asly:
                ac = rc + 7
            elif "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤" in asly:
                ac = rc + 13
            elif "—Ç–æ–ø –∂–∞–±" in asly:
                ac = rc + 21
            else:
                ac = rc + 33
            ai = self.me.id % 100 + ac
            if ai > 81:
                ai -= 42
            else:
                ai += 27
            ar = random.randint(1, 131)
            if ar > ai:
                randelta = random.randint(ai, ar)
            else:
                randelta = random.randint(3, ac)
            
            if (
                message.message.lower().startswith(
                    ("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é", "@tgtoadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é")
                )
            ) and chat in ninja:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —Ç–æ–ª—å–∫–æ" in response.text:
                        txt = f"<i>{message.sender.first_name} –≤ –ø–æ–∏—Å–∫–µ</i>"
                        nm = await self.client.send_message(1655814348, txt)
                        ch = await ch
                        src = (
                            f"Chat id: {chat}\nUser id: {message.sender_id}\n–£—Å–∏–ª–∏—Ç–µ–ª—å:"
                        )
                        ms = await self.client.get_messages(1655814348, search=src)
                        if ms.total == 0:
                            src = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ò–º—è –∂–∞–±—ã:"
                            ms2 = await self.client.get_messages(1655814348, search=src)
                            for i in ms2:
                                jbn = re.search(
                                    "–ò–º—è –∂–∞–±—ã: (.+)", i.message).group(1)
                            src = f"Chat id: {chat}\n–ö–ª–∞–Ω: {jbn}"
                            ms3 = await self.client.get_messages(1655814348, search=src)
                            for i in ms3:
                                klan = re.search(
                                    "–ö–ª–∞–Ω: (.+)", i.message).group(1)
                        for i in ms:
                            klan = re.search("–ö–ª–∞–Ω: (.+)", i.message).group(1)
                            if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.message:
                                liga = re.search(
                                    "–õ–∏–≥–∞: (.+)", i.message).group(1)
                                usil = re.search(
                                    "–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)", i.message).group(1)
                                txt += f"\n–ß–∞—Ç: {ch.title}\n–ö–ª–∞–Ω: {klan}\n–õ–∏–≥–∞: {liga}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {usil}"
                            else:
                                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan}"
                                ms1 = await self.client.get_messages(
                                    1441941681, search=src
                                )
                                for i in ms1:
                                    liga = re.search(
                                        "–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) —Å–µ–∑–æ–Ω–∞", i.message
                                    ).group(1)
                                    txt += (
                                        f"\n–ß–∞—Ç: {ch.title}\n–ö–ª–∞–Ω: {klan}\n–õ–∏–≥–∞: {liga}"
                                    )
                        return await utils.answer(nm, txt)
                    else:
                        return
            elif (
                message.message.startswith("–ê–ª–ª–æ")
                and chat in ninja
                and message.sender_id in {1124824021}
            ):
                capt = re.search(
                    "–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞ .+\n(<.+?(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>)",
                    message.text,
                )
                if capt:
                    id0 = capt.group(12)
                    ja0 = capt.group(11)
                    id1 = capt.group(10)
                    ja1 = capt.group(9)
                    id2 = capt.group(8)
                    ja2 = capt.group(7)
                    id3 = capt.group(6)
                    ja3 = capt.group(5)
                    id4 = capt.group(4)
                    ja4 = capt.group(3)
                    ek = capt.group(2)
                    mk = capt.group(1)
                    war = f"{mk} –ø—Ä–æ—Ç–∏–≤ –∫–ª–∞–Ω–∞ {ek}"
                    m = await self.client.send_message(1655814348, f"‚ö°Ô∏è –ö–ª–∞–Ω {war}")
                    war += f"\nChat id: {chat}\n<b>–ö–ª–∞–Ω: {mk}</b>\n{ja0} {id0}\n{ja1} {id1}\n{ja2} {id2}\n{ja3} {id3}\n{ja4} {id4}"
                    return await utils.answer(m, war)
                else:
                    return
            elif (
                message.message.lower().startswith(("–º–æ–π –∫–ª–∞–Ω", "@tgtoadbot –º–æ–π –∫–ª–∞–Ω"))
                and chat in ninja
            ):
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–û–ø—ã—Ç" in response.text:
                        ch = await ch
                        klan = re.search("–ö–ª–∞–Ω (.+):", response.text).group(1)
                        liga = re.search("–õ–∏–≥–∞: (.+)", response.text).group(1)
                        usil = re.search("–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)",
                                         response.text).group(1)
                        info = response.text
                        clj = re.search(
                            "\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\n",
                            response.text,
                        )
                        if clj:
                            lid = clj.group(1)
##                            src = f"Chat id: {chat}\n–ò–º—è –∂–∞–±—ã: {lid}"
##                            ms = await self.client.get_messages(1655814348, search=src)
##                            if ms.total == 0:
##                                urv0 = "~"
##                                cll0 = "~"
##                            else:
##                                for i in ms:
##                                    lid = re.search(
##                                        "–ò–º—è: (.+)", i.message).group(1)
##                                    urv0 = re.search("–£—Ä–æ–≤–µ–Ω—å: (.+)", i.message).group(
##                                        1
##                                    )
##                                    cll0 = re.search(
##                                        "–ö–ª–∞—Å—Å: (.+)", i.message).group(1)
                            ja1 = clj.group(2)
                            ja2 = clj.group(3)
                            ja3 = clj.group(4)
                            ja4 = clj.group(5)
                            info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ß–∞—Ç: {ch.title}\n–ò–º—è: {message.sender.first_name}\n–õ–∏–≥–∞: {liga}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {usil}\n\n–ö–ª–∞–Ω: {klan}\n(–ª–∏–¥): {lid}\n{ja1}\n{ja2}\n{ja3}:\n{ja4}"
                        return await self.client.send_message(OPPY, info)
                    else:
                        return
            elif (
                message.message.lower().startswith(("–º–æ—è –∂–∞–±–∞", "@tgtoadbot –º–æ—è –∂–∞–±–∞"))
                and chat in ninja
            ):
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–ò–º—è –∂–∞–±—ã:" in response.text:
                        ch = await ch
                        imy = re.search("–ò–º—è –∂–∞–±—ã: (.+)",
                                        response.text).group(1)
                        urv = re.search("–≤–∞—à–µ–π –∂–∞–±—ã: (.+)",
                                        response.text).group(1)
                        cll = re.search("–ö–ª–∞—Å—Å: (.+)", response.text).group(1)
                        syt = re.search("–°—ã—Ç–æ—Å—Ç—å: (.+)",
                                        response.text).group(1)
                        byk = re.search("–ë—É–∫–∞—à–∫–∏: (.+)",
                                        response.text).group(1)
                        info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ò–º—è –∂–∞–±—ã: {imy}\n–£—Ä–æ–≤–µ–Ω—å: {urv}\n–°—ã—Ç–æ—Å—Ç—å: {syt}\n–ö–ª–∞—Å—Å: {cll}\n–ë—É–∫–∞—à–∫–∏: {byk}\n–ò–º—è: {message.sender.first_name}\n–ß–∞—Ç: {ch.title}"
                        return await self.client.send_message(OPPY, info)
                    else:
                        return
            elif (
                message.message.lower().startswith(
                    ("–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ", "@tgtoadbot –º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
                )
                and chat in ninja
            ):
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–í–∞—à–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:" in response.text:
                        ch = await ch
                        snr = re.search(
                            "(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n\n.+\n.+\n.+\n.+\n\n(.+)\n(.+)\n(.+)",
                            response.text,
                        )
                        if snr:
                            aa = snr.group(1)
                            a1 = snr.group(2)
                            a2 = snr.group(3)
                            a3 = snr.group(4)
                            a4 = snr.group(5)
                            a5 = snr.group(6)
                            a6 = snr.group(7)
                            a7 = snr.group(8)
                            a8 = snr.group(9)
                            a9 = snr.group(10)
                        info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ò–º—è: {message.sender.first_name}\n–ß–∞—Ç: {ch.title}\n\n–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:\n{aa}\n{a1}\n{a2}\n{a3}\n{a4}\n\n{a5}\n{a6}\n{a7}\n{a8}\n{a9}"
                        return await self.client.send_message(OPPY, info)
                    else:
                        return
            elif message.message.lower().startswith("–≤–æ–π–Ω–∞ –∏–Ω—Ñ–æ") and chat in ninja:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    response = await response
                    if "–í –∫–ª–∞–Ω–æ–≤–æ–π –≤–æ–π–Ω–µ" in response.text:
                        ch = await ch
                        cln = re.search("–ö–ª–∞–Ω (.+)üõ°", response.text).group(1)
                        cln1 = re.search(
                            "–≤–æ–π–Ω–µ —Å (.+)$", response.text).group(1)
                        info = response.text
                        clw = re.search(
                            "\|.+\n\n(.+) \|.+\n(.+) \|.+\n(.+) \|.+\n(.+) \|.+\n(.+) \|",
                            response.text,
                        )
                        if clw:
                            ja0 = clw.group(1)
                            ja1 = clw.group(2)
                            ja2 = clw.group(3)
                            ja3 = clw.group(4)
                            ja4 = clw.group(5)
                            info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ß–∞—Ç: {ch.title}\n–ò–º—è: {message.sender.first_name}\n\n<b>–ö–ª–∞–Ω {cln}</b> –≤ –≤–æ–π–Ω–µ —Å {cln1}\n{ja0}\n{ja1}\n{ja2}\n{ja3}\n{ja4}"
                        return await self.client.send_message(OPPY, info)
                    else:
                        return
            
            elif (
                message.message.startswith("—Ä—Ä—Ä—Ä—Ä—Ä–µ–µ–µ–µ")
                and chat in ninja
                and message.sender_id in {1124824021}
            ):
                capt = re.search(
                    "–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞ .+\n(<.+?(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>), (<.+=(\d+).+>)",
                    message.text,
                )
                if capt:
                    id0 = capt.group(12)
                    ja0 = capt.group(11)
                    id1 = capt.group(10)
                    ja1 = capt.group(9)
                    id2 = capt.group(8)
                    ja2 = capt.group(7)
                    id3 = capt.group(6)
                    ja3 = capt.group(5)
                    id4 = capt.group(4)
                    ja4 = capt.group(3)
                    ek = capt.group(2)
                    mk = capt.group(1)
                    war = f"{mk} –ø—Ä–æ—Ç–∏–≤ –∫–ª–∞–Ω–∞ {ek}"
                    m = await self.client.send_message(1655814348, f"‚ö°Ô∏è –ö–ª–∞–Ω {war}")
                    war += f"\nChat id: {chat}\n<b>–ö–ª–∞–Ω {mk}</b>\n{ja0} {id0}\n{ja1} {id1}\n{ja2} {id2}\n{ja3} {id3}\n{ja4} {id4}"
                    return await utils.answer(m, war)
                else:
                    return
            elif message.message.lower().startswith("–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä") and message.sender_id in bak:
                await asyncio.sleep(randelta)
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await conv.send_message("–º–æ–π –±–∞–ª–∞–Ω—Å")
                    response = await response
                    if "–ë–∞–ª–∞–Ω—Å –±—É–∫–∞—à–µ–∫ –≤–∞—à–µ–π" in response.text:
                        bug = int(
                            re.search(
                                "–∂–∞–±—ã: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        if bug < 100:
                            return await utils.answer(message, "–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞")
                        else:
                            while bug > 50049:
                                await utils.answer(message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000")
                                bug -= 50000
                            snt = bug - 50
                            return await utils.answer(
                                message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}"
                            )
                    else:
                        return
            elif message.message.lower().startswith("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä") and message.sender_id in bak:
                await asyncio.sleep(randelta)
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await conv.send_message("–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
                    response = await response
                    if "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:" in response.text:
                        cnd = int(
                            re.search(
                                "–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        apt = int(
                            re.search(
                                "–ê–ø—Ç–µ—á–∫–∏: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        if cnd > 0:
                            if cnd > 49:
                                await utils.answer(message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50")
                            else:
                                await utils.answer(message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}")
                        if apt > 0:
                            if apt > 9:
                                return await utils.answer(
                                    message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10"
                                )
                            else:
                                return await utils.answer(
                                    message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}"
                                )
                        else:
                            return
                    else:
                        return
            elif message.message.startswith(asly) and message.sender_id in bak:
                await asyncio.sleep(randelta)
                sch = (
                    await self.client(
                        functions.messages.GetScheduledHistoryRequest(chat, 0)
                    )
                ).messages
                await self.client(
                    functions.messages.DeleteScheduledMessagesRequest(
                        chat, id=[x.id for x in sch]
                    )
                )
                async with self.client.conversation(message.chat_id) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=message.chat_id,
                        )
                    )
                    await conv.send_message("–∂–∞–±–∞ –∏–Ω—Ñ–æ")
                    response = await response
                    if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                        time_n = re.search(
                            "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                            response.text,
                            re.IGNORECASE,
                        )
                        if time_n:
                            hrs = int(time_n.group(1))
                            min = int(time_n.group(2))
                            delta = datetime.timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                            await conv.send_message("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta)
                    else:
                        delta = datetime.timedelta(hours=6, seconds=3)
                        await conv.send_message("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                    for number in range(3):
                        delta = delta + datetime.timedelta(hours=6, seconds=3)
                        await conv.send_message("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta)
                    if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in response.text:
                        time_j = re.search(
                            "–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                            response.text,
                            re.IGNORECASE,
                        )
                        if time_j:
                            hrs = int(time_j.group(1))
                            min = int(time_j.group(2))
                            delta = datetime.timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                            await conv.send_message(
                                "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                            )
                            await conv.send_message(
                                "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                schedule=delta +
                                datetime.timedelta(seconds=13),
                            )
                        for number in range(2):
                            delta = delta + datetime.timedelta(hours=8)
                            await conv.send_message(
                                "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                            )
                            await conv.send_message(
                                "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                schedule=delta +
                                datetime.timedelta(seconds=13),
                            )
                            await conv.send_message(
                                "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                                schedule=delta
                                + datetime.timedelta(hours=2, seconds=13),
                            )
                    if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in response.text:
                        time_r = re.search(
                            "—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                            response.text,
                            re.IGNORECASE,
                        )
                        if time_r:
                            hrs = int(time_r.group(1))
                            min = int(time_r.group(2))
                            delta = datetime.timedelta(
                                hours=hrs, minutes=min, seconds=3
                            )
                            await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta)
                    elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in response.text:
                        await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await conv.send_message("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                        delta = datetime.timedelta(hours=2, seconds=3)
                        await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta)
                    else:
                        await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                        delta = datetime.timedelta(hours=6)
                    for number in range(2):
                        delta = delta + datetime.timedelta(hours=6, seconds=3)
                        await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta)
                        await conv.send_message(
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + datetime.timedelta(seconds=3),
                        )
                        await conv.send_message(
                            "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                            schedule=delta +
                            datetime.timedelta(hours=2, seconds=13),
                        )
            else:
                pass
            if chatid not in duel:
                return
            elif message.sender_id not in {self.me.id, 1124824021}:
                if "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message:
                    await asyncio.sleep(rc)
                    return await utils.answer(message, "–¥—É—ç–ª—å")
                else:
                    return
            elif message.sender_id in {1124824021}:
                if (
                    f"–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.me.first_name}"
                    in message.message
                ):
                    await asyncio.sleep(rc)
                    await message.respond("–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å")
                    await asyncio.sleep(rc)
                    return await message.respond("–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç")
                elif "–ò–º—è –ñ–∞–±—ã" in self.status:
                    if f"{self.status['–ò–º—è –ñ–∞–±—ã']}, –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message:
                        await asyncio.sleep(rc)
                        return await message.respond("–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
                    elif "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message:
                        if (
                            self.status["–ò–º—è –ñ–∞–±—ã"] in message.message
                            and "–æ—Ç—ã–≥—Ä–∞–ª" in message.message
                        ):
                            duel.pop(chatid)
                            self.db.set("–î—É—ç–ª—å–∫–∞", "duel", duel)
                            await utils.answer(message, "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!")
                        elif self.status["–ò–º—è –ñ–∞–±—ã"] not in message.message:
                            await asyncio.sleep(rc)
                            await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
                        else:
                            return
                    else:
                        return
                else:
                    return
            else:
                return
        except:
            return
