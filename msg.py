import random
from asyncio import sleep

from .. import loader, utils


class DelMsgMod(loader.Module):
    strings = {"name": "DelMsg"}

    async def delmsgcmd(self, message):
        msg = [msg async for msg in message.client.iter_messages(message.chat_id, from_user="me")]
        if utils.get_args_raw(message):
            args = int(utils.get_args_raw(message))
        else:
            args = len(msg)
        for i in range(args):
            await msg[i].delete()
            await sleep(0.16)

    async def shifrcmd(self, message):
        text = utils.get_args_raw(message).lower()
        txtnorm = dict(zip(map(ord,
                               "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é. ?!,-:;"),
                           "3√´jmqv9√¥¬ß√ºld–πa¬ø42z—çou…ô√†>√Ω5e√∂$0¬°<61¬•g8t—ä7"
                           ))
        txt = text.translate(txtnorm)
        await message.edit(txt)
        await sleep(300)
        await message.delete()

    async def deshifrcmd(self, message):
        text = str(await message.get_reply_message()).split("'")
        await message.delete()
        txt = text[1]

        txtnorm = dict(zip(map(ord,
                               "3√´jmqv9√¥¬ß√ºld–πa¬ø42z—çou…ô√†>√Ω5e√∂$0¬°<61¬•g8t—ä7"),
                           "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é. ?!,-:;7"
                           ))
        txte = txt.translate(txtnorm)
        await message.client.send_message("me", txte)

    async def emojicmd(self, message):
        args = utils.get_args_raw(message)
        c = args.split(" ")
        emoji = ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'ü§£', 'ü•∞', 'üòá', 'üòä', 'üòâ', 'üôÉ', 'üôÇ', 'üòÇ', 'üòç', 'ü§©', 'üòò', 'üòó', '‚ò∫', 'üòö', 'üòô', 'ü§ó', 'ü§ë', 'üòù', 'ü§™', 'üòú', 'üòõ', 'üòã', 'ü§≠', 'ü§´', 'ü§î', 'ü§ê', 'ü§®', 'üòê', 'üòë', 'üòå', 'ü§•', 'üò¨', 'üôÑ', 'üòí', 'üòè', 'üò∂', 'üòî', 'üò™', 'ü§§',
                 'üò¥', 'üò∑', 'ü§í', 'ü§ï', 'ü§¢', 'ü§Ø', 'ü§Æ', 'ü§†', 'ü§ß', 'ü•≥', 'ü•µ', 'üòé', 'ü•∂', 'ü§ì', 'ü•¥', 'üßê', 'üòµ', 'üòï', 'üò≥', 'üò¢', 'üò≤', 'üò•', 'üòØ', 'üò∞', 'üòÆ', 'üò®', 'üòß', 'üôÅ', 'üò¶', 'üòü', 'ü•∫', 'üò≠', 'üò´', 'üò±', 'ü•±', 'üòñ', 'üò§', 'üò£', 'üò°', 'üòû', 'üò†', 'üòì', 'ü§¨', 'üò©', 'üòà', 'üëø']
        d = []
        e = len(c)
        for i in range(e):
            rand = random.choice(emoji)
            d.append(c[i])
            d.append(rand)
        f = len(d) - 1
        d.pop(f)
        t = "".join(d)
        await message.edit(t)

    async def shipcmd(self, message):
        user1 = random.choice([i for i in await message.client.get_participants(message.to_id)])
        user2 = random.choice([i for i in await message.client.get_participants(message.to_id)])
        rand1 = message.edit(
            f"<a href=tg://user?id={user1.id}>{user1.first_name}</a> –∏ <a href=tg://user?id={user2.id}>{user2.first_name}</a> –ª—é–±–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞!\n–ú—É—Ä-–ú—É—Äüòª")
        rand2 = message.edit(
            f"<a href=tg://user?id={user1.id}>{user1.first_name}</a> –∏ <a href=tg://user?id={user2.id}>{user2.first_name}</a> –ª—é–±–æ–≤–Ω–∞—è –ø–∞—Ä–æ—á–∫–∞!\n–ß–º–æ–∫üòò")
        rand3 = message.edit(
            f"–ü–∞—Ä–∞ –¥–Ω—è‚ù§Ô∏è:\n<a href=tg://user?id={user1.id}>{user1.first_name}</a> –∏ <a href=tg://user?id={user2.id}>{user2.first_name}</a>")
        rand4 = message.edit(
            f"<a href=tg://user?id={user1.id}>{user1.first_name}</a> –ª—é–±–∏—Ç <a href=tg://user?id={user2.id}>{user2.first_name}</a> üòò")
        rand5 = message.edit(
            f"<a href=tg://user?id={user1.id}>{user1.first_name}</a> –ø—Ä–∏–≥–ª–∞—Å–∏–ª –Ω–∞ —á–∞–π <a href=tg://user?id={user2.id}>{user2.first_name}</a> ‚òï‚ù§Ô∏è")
        rand6 = message.edit(
            f"<a href=tg://user?id={user1.id}>{user1.first_name}</a> –∑–∞—à–µ–ª –∫ <a href=tg://user?id={user2.id}>{user2.first_name}</a>\nüòèüî•")
        rand = [rand1, rand2, rand3, rand4, rand5, rand6]
        randchoice = random.choice(rand)
        await randchoice

    async def puntooncmd(self, message):
        """.puntoon –≤–∫–ª—é—á–∞–µ—Ç –º–æ–¥—É–ª—å PuntoSw."""
        self.truefalse = True
        await message.edit("<b>PuntoSw On.</b>")

    async def puntooffcmd(self, message):
        """.puntooff –≤—ã–∫–ª—é—á–∞–µ—Ç –º–æ–¥—É–ª—å PuntoSw."""
        self.truefalse = False
        await message.edit("<b>Punto Off.</b>")

    async def watcher(self, message):
        await sleep(0.1)
        if self.truefalse == True:
            me = (await message.client.get_me())
            if message.sender_id == me.id:
                text = message.text.lower()
                txtnorm = dict(zip(map(ord,
                                       "qwertyuiop[]asdfghjkl;'zxcvbnm/"
                                       'QWERTYUIOP{}ASDFGHJKL:"ZXCVBNM<>'),
                                   "–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é"
                                   '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                                   ))
                await message.delete()
                txt = list(text.translate(txtnorm))
                txt1 = txt[0].upper()
                txt2 = txt1 + "".join(txt[1:])
                await message.respond(txt2)

    async def dcmd(self, message):
        """–ü—Ä–∏–º–µ—Ä: .d 5s –ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?\ns - —Å–µ–∫—É–Ω–¥—ã; m - –º–∏–Ω—É—Ç—ã; h - —á–∞—Å—ã."""
        args = utils.get_args_raw(message)
        text = args.split(" ")
        txt = text[1:]
        txtjoin = " ".join(txt)
        numbs = text[0]
        timeq = list(numbs)
        lentime = len(timeq)
        secormin = timeq[lentime - 1]
        timeq.pop(lentime - 1)
        nm = int("".join(timeq))
        if secormin == "s":
            timesmh = nm
        elif secormin == "m":
            timesmh = nm * 60
        elif secormin == "h":
            timesmh = nm * 60 * 60
        else:
            await message.reply("<b>–í—Ä–µ–º—è —É–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ!\n–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ: s - —Å–µ–∫—É–Ω–¥—ã, m - –º–∏–Ω—É—Ç—ã, h - —á–∞—Å—ã.</b>")
        await message.edit(txtjoin)
        await sleep(timesmh)
        await message.delete()

    async def edcmd(self, message):
        args = utils.get_args_raw(message)
        text = args.split(" | ")
        words = text[1]
        text1 = text[0].split(" ")
        time = int(text1[0]) * 60
        words1 = " ".join(text1[1:])
        await message.edit(words1)
        await sleep(time)
        await message.edit(words)

    async def rpscmd(self, message):
        """–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–∏—à–∏—Ç–µ .rps (–∫–∞–º–µ–Ω—å/–Ω–æ–∂–Ω–∏—Ü—ã/–±—É–º–∞–≥–∞)"""
        rps = ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞, –∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞, –∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã",
               "–±—É–º–∞–≥–∞, –∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞, –∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞, –∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]
        args = utils.get_args_raw(message)
        rand = random.choice(rps)
        if rand == args:
            await message.edit("<b>–ù–∏—á—å—è, —Ç–≤–æ–π —Å–æ–ø–µ—Ä–Ω–∏–∫ –≤—ã–±—Ä–∞–ª —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ —Ç—ã!</b>")
        elif rand == "–∫–∞–º–µ–Ω—å" and args == "–±—É–º–∞–≥–∞":
            await message.edit("<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –ø–æ–±–µ–¥–∏–ª!</b>")
        elif rand == "–±—É–º–∞–≥–∞" and args == "–Ω–æ–∂–Ω–∏—Ü—ã":
            await message.edit("<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –ø–æ–±–µ–¥–∏–ª!</b>")
        elif rand == "–Ω–æ–∂–Ω–∏—Ü—ã" and args == "–∫–∞–º–µ–Ω—å":
            await message.edit("<b>–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –ø–æ–±–µ–¥–∏–ª!</b>")
        else:
            await message.edit("<b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª(</b>")
        await message.respond("–¢—ã –≤—ã–±—Ä–∞–ª ‚Äî " + args + ", \n–∞ —Ç–≤–æ–π —Å–æ–ø–µ—Ä–Ω–∏–∫ ‚Äî " + rand + ".")

    def __init__(self):
        self.farm = True
        self.virys = True

    async def farmcmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–§–µ—Ä–º–∞". –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–∏—Ä–∏—Å—Ñ–∞—Ä–º —Å—Ç–æ–ø"."""
        while self.farm:
            await message.reply("–§–µ—Ä–º–∞\n\n<b>–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 4 —á–∞—Å–∞.\n\nIrisBot by @CREATIVE_tg1</b>")
            await sleep(14500)

    async def virysncmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–ó–∞—Ä–∞–∑–∏—Ç—å =" (–ó–∞—Ä–∞–∂–∞–µ—Ç —Ä–∞–≤–Ω–æ–≥–æ –ø–æ —Å–∏–ª–µ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞). –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–∏—Ä–∏—Å–≤–∏—Ä—É—Å —Å—Ç–æ–ø"."""
        while self.virys:
            await message.reply("–ó–∞—Ä–∞–∑–∏—Ç—å =\n\n<b>–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å.\n\nIrisBot by @CREATIVE_tg1</b>")
            await sleep(3600)

    async def virysecmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–ó–∞—Ä–∞–∑–∏—Ç—å -" (–ó–∞—Ä–∞–∂–∞–µ—Ç —Å–ª–∞–±–æ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞). –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–∏—Ä–∏—Å–≤–∏—Ä—É—Å —Å—Ç–æ–ø"."""
        while self.virys:
            await message.reply("–ó–∞—Ä–∞–∑–∏—Ç—å -\n\n<b>–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å.\n\nIrisBot by @CREATIVE_tg1</b>")
            await sleep(3600)

    async def viryshcmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É "–ó–∞—Ä–∞–∑–∏—Ç—å +" (–ó–∞—Ä–∞–∂–∞–µ—Ç —Å–∏–ª—å–Ω–æ–≥–æ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞) . –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–∏—Ä–∏—Å–≤–∏—Ä—É—Å —Å—Ç–æ–ø"."""
        while self.virys:
            await message.reply("–ó–∞—Ä–∞–∑–∏—Ç—å +\n\n<b>–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å.\n\nIrisBot by @CREATIVE_tg1</b>")
            await sleep(3600)

    async def watcher(self, message):
        me = (await message.client.get_me())
        if message.sender_id == me.id:
            if message.text.lower() == "–∏—Ä–∏—Å—Ñ–∞—Ä–º —Å—Ç–æ–ø":
                self.farm = False
                await message.reply("<b>–ò—Ä–∏—Å—Ñ–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</b>")
            if message.text.lower() == "–∏—Ä–∏—Å–≤–∏—Ä—É—Å —Å—Ç–æ–ø":
                self.virys = False
                await message.reply("<b>–ò—Ä–∏—Å–≤–∏—Ä—É—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</b>")
