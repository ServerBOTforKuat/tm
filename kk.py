import asyncio
import datetime
import logging
import random
import re

from telethon import events, functions

from .. import loader, utils

logger = logging.getLogger(__name__)
asl = [
    "–∂–∞–±–∞ –¥–Ω—è",
    "—Ç–æ–ø –∂–∞–±",
    "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤",
    "–∫–ª–∞–Ω—ã",
    "–≤–∑—è—Ç—å –∂–∞–±—É",
]
bak = [
    1709411724,
    1261343954,
    1785723159,
    1486632011,
    1863720231,
    547639600,
    449434040,
    388412512,
    553299699,
    412897338,
]
elj = [
    -1001441941681,
    -1001436786642,
    -1001380664241,
    -1001289617428,
    -1001485617300,
    -1001465870466,
    -1001169549362,
    -1001543064221,
]
klw = [-419726290, -1001543064221, -577735616, -1001493923839]
ninja = [
    -1001380664241,
    -1001441941681,
    -1001289617428,
    -1001436786642,
    -1001447960786,
    -1001290958283,
    -1001485617300,
]
nr = [1, 3, 5, 7, 9]


def register(cb):
    """.

    ----------

    """
    cb(kramiikkMod())


@loader.tds
class kramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    answers = {
        0: ("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        1: ("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        2: ("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        3: ("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç"),
    }
    strings = {
        "name": "kramiikk",
        "quest_answer": "<i>%answer%</i>",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        """.

        ----------

        """
        self.client = client
        self.db = db
        self.me = await client.get_me()
        self.status = db.get("Status", "status", {})
        self.duel = db.get("–î—É—ç–ª—å–∫–∞", "duel", {})

    async def watcher(self, message):
        """.

        ----------

        """
        try:
            name = "–º–æ–Ω–∞—Ä—Ö"
            rh = random.choice(nr)
            chat = message.chat_id
            asly = random.choice(asl)
            rd = random.randint(rh, 13)
            if (
                f"–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: {self.me.first_name}" in message.message
                and message.mentioned and message.buttons
            ):
                await message.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                return await message.click(1)
            elif "[8üêù]" in message.message and message.buttons:
                return await message.click(0)
            elif "[4üêù]" in message.message and message.buttons:
                return await message.click(0)
            elif "[2‚ò¢Ô∏èüêù, 2üî¥üêù," in message.message and message.buttons:
                return await message.click(0)
            elif "–ë–∑–∑–∑–∑! –° –ø–∞—Å–µ–∫–∏" in message.message and message.buttons:
                return await message.click(0)
            elif "–ù–ï–ó–ê–ß–Å–¢!" in message.message and chat in {707693258}:
                args = [int(x)
                        for x in message.text.split() if x.isnumeric()]
                rd = random.randint(20, 60)
                if len(args) == 4:
                    delta = datetime.timedelta(
                        hours=args[1], minutes=args[2], seconds=args[3] + 13
                    )
                elif len(args) == 3:
                    delta = datetime.timedelta(
                        minutes=args[1], seconds=args[2] + 13
                    )
                elif len(args) == 2:
                    delta = datetime.timedelta(seconds=args[1] + 13)
                for i in range(3):
                    delta = delta + datetime.timedelta(seconds=13)
                    await self.client.send_message(chat, "–§–∞—Ä–º–∞", schedule=delta)
            elif "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message and message.sender_id not in {self.me.id, 1124824021} and chat in self.duel:
                await asyncio.sleep(rd)
                return await utils.answer(message, "–¥—É—ç–ª—å")
            elif (
                f"–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.me.first_name}"
                in message.message and message.sender_id in {1124824021} and chat in self.duel
            ):
                await asyncio.sleep(rd)
                await message.respond("–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å")
                await asyncio.sleep(rd)
                return await message.respond("–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç")
            elif f"{self.status['–ò–º—è –ñ–∞–±—ã']}, –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message and chat in self.duel:
                await asyncio.sleep(rd)
                return await message.respond("–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
            elif (
                self.status["–ò–º—è –ñ–∞–±—ã"] in message.message
                and "–æ—Ç—ã–≥—Ä–∞–ª" in message.message and chat in self.duel
            ):
                self.duel.pop(chat)
                self.db.set("–î—É—ç–ª—å–∫–∞", "duel", self.duel)
                await utils.answer(
                    message, "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!"
                )
            elif "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message and self.status["–ò–º—è –ñ–∞–±—ã"] not in message.message and chat in self.duel:
                await asyncio.sleep(rd)
                await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
            elif message.message.startswith("–ê–ª–ª–æ") and message.sender_id in {
                1124824021
            } and chat in ninja:
                capt = re.search(
                    "–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", message.text)
                if capt:
                    mk = capt.group(1)
                    ek = capt.group(2)
                    txt = f"‚ö°Ô∏è{mk} <b>VS</b> {ek}"
                    nm = await self.client.send_message(1767017980, txt)
                    src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {mk}"
                    ms = await self.client.get_messages(1782816965, search=src)
                    if ms.total == 0:
                        src = f"{chat} {mk} –õ–∏–≥–∞:"
                        ms1 = await self.client.get_messages(1655814348, search=src)
                        for i in ms1:
                            liga = re.search(
                                "–õ–∏–≥–∞: (.+)", i.message).group(1)
                    else:
                        for i in ms:
                            liga = re.search(
                                "–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message
                            ).group(1)
                    txt += f"\n–õ–∏–≥–∞: {liga}"
                    return await utils.answer(nm, txt)
            elif message.message.lower().startswith(
                ("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é", "@tgtoadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é")
            ) and chat in ninja:
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=chat,
                        )
                    )
                    response = await response
                    if "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ —Ç–æ–ª—å–∫–æ" in response.text:
                        src = f"Chat id: {chat} {message.sender_id} –ö–ª–∞–Ω:"
                        ms = await self.client.get_messages(1655814348, search=src)
                        if ms.total == 0:
                            return await self.client.send_message(
                                1767017980,
                                f"<i>–í –ø–æ–∏—Å–∫–µ {message.sender.first_name}</i>",
                            )
                        for i in ms:
                            klan = re.search(
                                "–ö–ª–∞–Ω: (.+)", i.message).group(1)
                            if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.message:
                                liga = re.search(
                                    "–õ–∏–≥–∞: (.+)", i.message).group(1)
                                usil = re.search(
                                    "–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)", i.message
                                ).group(1)
                                lif = f"\n–õ–∏–≥–∞: {liga}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {usil}"
                            else:
                                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan}"
                                ms = await self.client.get_messages(
                                    1782816965, search=src
                                )
                                for i in ms:
                                    liga = re.search(
                                        "–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message
                                    ).group(1)
                                    lif = f"\n–õ–∏–≥–∞: {liga}"
                        txt = f"–í –ø–æ–∏—Å–∫–µ {klan}{lif}"
                        await self.client.send_message(1767017980, txt)
                return await self.client.conversation(conv).cancel_all()
            elif message.message.lower().startswith("–ª–≤–ª —á–µ–∫") and message.sender_id in bak:
                x = int(message.message.split(" ", 3)[2])
                u = int(message.message.split(" ", 3)[3])
                y = ((x + u) - 160) * 2
                if y > -1:
                    res = f"<b>~ {y} –ª–≤–ª</b>"
                return await utils.answer(message, res)
            elif message.message.lower().startswith(
                (name, f"@{self.me.username}")
            ) or (name in message.message and message.message.endswith("üòâ")) and message.sender_id in bak:
                await asyncio.sleep(rd)
                args = message.message
                reply = await message.get_reply_message()
                count = args.split(" ", 2)[1]
                if message.message.endswith("?"):
                    words = re.findall(r"\w+", f"{message.message}")
                    words_len = [words.__len__()] + [x.__len__()
                                                     for x in words]
                    i = words_len.__len__()
                    while i > 1:
                        i -= 1
                        for x in range(i):
                            words_len[x] = (
                                words_len[x] + words_len[x + 1] - 3
                                if words_len[x] + words_len[x + 1] > 3
                                else words_len[x] + words_len[x + 1]
                            )
                    return await message.reply(
                        self.strings["quest_answer"].replace(
                            "%answer%", random.choice(
                                self.answers[words_len[0]])
                        )
                    )
                elif "–Ω–∞–ø–∏—à–∏ –≤" in message.message:
                    count = args.split(" ", 4)[3]
                    if count.isnumeric():
                        count = int(args.split(" ", 4)[3])
                    mmsg = args.split(" ", 4)[4]
                    await self.client.send_message(
                        1001714871513, f"{count} {mmsg} {chat}"
                    )
                    async with self.client.conversation(count) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=count,
                            )
                        )
                        await conv.send_message(mmsg)
                        response = await response
                        await message.reply(response.message)
                    return await self.client.conversation(conv).cancel_all()
                elif "—Ä–µ–ø–ª–∞–π" in message.message:
                    sct = args.split(" ", 4)[2]
                    if sct.isnumeric():
                        sct = int(args.split(" ", 4)[2])
                    sak = args.split(" ", 4)[3]
                    if sak.isnumeric():
                        sak = int(args.split(" ", 4)[3])
                    ms = await self.client.get_messages(sct, ids=sak)
                    mmsg = args.split(" ", 4)[4]
                    await ms.reply(mmsg)
                elif "–Ω–∞–ø–∞–¥–∏" in message.message:
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                        response = await response
                        if "–í–∞—à–∞ –∂–∞–±–∞ –Ω–∞" in response.text:
                            await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                            await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                            return await conv.send_message("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                        elif "–í–∞—à–∞ –∂–∞–±–∞ —Å–µ–π—á–∞—Å" in response.text:
                            await conv.send_message("–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è")
                            await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                            return await conv.send_message("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                    return await self.client.conversation(conv).cancel_all()
                elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in message.message:
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ")
                        response = await response
                        if "–ü–æ–∂–∞–ª–µ–π—Ç–µ –∂–∞–±—É," in response.text:
                            await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                            await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                            return await conv.send_message(
                                "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>",
                            )
                        elif "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in response.text:
                            await conv.send_message("–¥—É—ç–ª—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å")
                            await conv.send_message("–¥—É—ç–ª—å –æ—Ç–æ–∑–≤–∞—Ç—å")
                            return conv.send_message(
                                "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>",
                            )
                        elif "–í–∞—à–∞ –∂–∞–±–∞ –ø—Ä–∏" in response.text:
                            await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                            return await conv.send_message(
                                "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>",
                            )
                    return await self.client.conversation(conv).cancel_all()
                elif "—Ç—É—Å–∞" in message.message:
                    await message.respond("–∂–∞–±—É –Ω–∞ —Ç—É—Å—É")
                elif "–≥–æ –∫–≤" in message.message:
                    await message.respond("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É")
                elif "—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ" in message.message:
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
                        response = await response
                        if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏")
                        if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç")
                        if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message(
                                "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
                            )
                        if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message(
                                "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
                            )
                        if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message(
                                "—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏",
                            )
                        if "–ë–∞–Ω–¥–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" in response.text:
                            await conv.send_message("–≤–∑—è—Ç—å –∂–∞–±—É")
                            response = await response
                            if "–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å" in response.text:
                                await conv.send_message("—Å–æ–±—Ä–∞—Ç—å –±–∞–Ω–¥—É")
                            else:
                                return await conv.send_message(
                                    "–≤–∑—è—Ç—å –∂–∞–±—É",
                                    schedule=datetime.timedelta(
                                        hours=2),
                                )
                    return await self.client.conversation(conv).cancel_all()
                elif "–¥—É—ç–ª—å–∫–∞" in message.message:
                    if chat in self.duel:
                        self.duel.pop(chat)
                        self.db.set("–î—É—ç–ª—å–∫–∞", "duel", self.duel)
                        return await utils.answer(
                            message, "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!"
                        )
                    self.duel.setdefault(chat, {})
                    self.db.set("–î—É—ç–ª—å–∫–∞", "duel", self.duel)
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–º–æ—è –∂–∞–±–∞")
                        response = await response
                        if "–ò–º—è –∂–∞–±—ã:" in response.text:
                            jaba = re.search("–ò–º—è –∂–∞–±—ã: (.+)", response.text).group(
                                1
                            )
                            self.status["–ò–º—è –ñ–∞–±—ã"] = jaba
                            self.db.set(
                                "Status", "status", self.status)
                            return await conv.send_message("–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
                    return await self.client.conversation(conv).cancel_all()
                elif count.isnumeric() and reply:
                    count = int(args.split(" ", 3)[1])
                    mmsg = args.split(" ", 3)[3]
                    time = int(args.split(" ", 3)[2])
                    for _ in range(count):
                        await reply.reply(mmsg)
                        await asyncio.sleep(time)
                elif count.isnumeric():
                    count = int(args.split(" ", 3)[1])
                    mmsg = args.split(" ", 3)[3]
                    time = int(args.split(" ", 3)[2])
                    for _ in range(count):
                        await self.client.send_message(chat, mmsg)
                        await asyncio.sleep(time)
                else:
                    mmsg = args.split(" ", 2)[2]
                    if reply:
                        return await reply.reply(mmsg)
                    else:
                        return await utils.answer(message, mmsg)
            elif message.message.lower().startswith("–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä") and message.sender_id in bak:
                await asyncio.sleep(rd)
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=chat,
                        )
                    )
                    await conv.send_message("–º–æ–π –±–∞–ª–∞–Ω—Å")
                    response = await response
                    if "–ë–∞–ª–∞–Ω—Å –±—É–∫–∞—à–µ–∫ –≤–∞—à–µ–π" in response.text:
                        bug = int(
                            re.search(
                                "–∂–∞–±—ã: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        if bug < 100:
                            return await utils.answer(
                                message, "–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞"
                            )
                        else:
                            while bug > 50049:
                                await utils.answer(
                                    message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000"
                                )
                                bug -= 50000
                            snt = bug - 50
                            return await utils.answer(
                                message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}"
                            )
                return await self.client.conversation(conv).cancel_all()
            elif message.message.lower().startswith("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä") and message.sender_id in bak:
                await asyncio.sleep(rd)
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=chat,
                        )
                    )
                    await conv.send_message("–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
                    response = await response
                    if "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:" in response.text:
                        cnd = int(
                            re.search(
                                "–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        apt = int(
                            re.search(
                                "–ê–ø—Ç–µ—á–∫–∏: (\d+)", response.text, re.IGNORECASE
                            ).group(1)
                        )
                        if cnd > 0:
                            if cnd > 49:
                                await utils.answer(message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50")
                            else:
                                await utils.answer(
                                    message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}"
                                )
                        if apt > 0:
                            if apt > 9:
                                return await utils.answer(
                                    message, "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10"
                                )
                            else:
                                return await utils.answer(
                                    message, f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}"
                                )
                return await self.client.conversation(conv).cancel_all()
            elif "–∑–∞—Ö–≤–∞—Ç —Ç–æ–ø–∞" in message.message and message.sender_id in bak:
                args = message.message
                reply = await message.get_reply_message()
                szn = args.split(" ", 2)[2]
                async with self.client.conversation(chat) as conv:
                    response = conv.wait_event(
                        events.NewMessage(
                            incoming=True,
                            from_users=1124824021,
                            chats=chat,
                        )
                    )
                    await conv.send_message(f'—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤ {szn}')
                    response = await response
                    result = re.findall(
                        '(\d+)\. üõ°(\d+) \| (.*)', response.text)
                    rep = "üßõüèø–ó–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ–º —Å–µ–∑–æ–Ω–µüßõüèø\n(–ü–æ–±–µ–¥—ã | –ù–∞–∑–≤–∞–Ω–∏–µ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ):"
                    for item in result:
                        src = f"{item[2]} –£—Å–∏–ª–∏—Ç–µ–ª—å:"
                        ms = await self.client.get_messages(1655814348, search=src)
                        if ms.total != 0:
                            a = "<i>üòà–ó–∞—Ö–≤–∞—á–µ–Ω</i>"
                        else:
                            a = "<i>üåö–ö—Ç–æ —ç—Ç–æ...</i>"
                        rep += f"\n{item[0]}.üõ°{item[1]} | {item[2]} | {a}"
                    await response.reply(rep)
                return await self.client.conversation(conv).cancel_all()
            elif message.message.lower().startswith(asly) and message.sender_id in bak:
                await asyncio.sleep(rd)
                sch = (
                    await self.client(
                        functions.messages.GetScheduledHistoryRequest(
                            chat, 0)
                    )
                ).messages
                await self.client(
                    functions.messages.DeleteScheduledMessagesRequest(
                        chat, id=[x.id for x in sch]
                    )
                )
                if chat in elj:
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ")
                        response = await response
                        if "–ù—É-–∫–∞ –ø–æ–¥–æ–∂–¥–∏," in response.text:
                            response = conv.wait_event(
                                events.NewMessage(
                                    incoming=True,
                                    from_users=1124824021,
                                    chats=chat,
                                )
                            )
                            await conv.send_message("—Ä–µ–π–¥ –∏–Ω—Ñ–æ")
                            response = await response
                            if "–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º" in response.text:
                                count = len(
                                    re.findall(
                                        "‚Ä¢ ",
                                        response.text.split(
                                            sep="–†–µ–±—è—Ç–∞ –≤ –∑–æ–ª–æ—Ç–æ–º –ø–æ–¥–∑–µ–º–µ–ª—å–µ:"
                                        )[1],
                                    )
                                )
                                if count > 2:
                                    await asyncio.sleep(rd)
                                    return await conv.send_message("—Ä–µ–π–¥ —Å—Ç–∞—Ä—Ç")
                        elif "–î–ª—è –≤—Ö–æ–¥–∞ –≤" in response.text:
                            await conv.send_message("–ú–æ—è –∂–∞–±–∞")
                            response = await response
                            if "–ò–º—è –∂–∞–±—ã:" in response.text:
                                bug = int(
                                    re.search(
                                        "–ë—É–∫–∞—à–∫–∏: (\d+)",
                                        response.text,
                                        re.IGNORECASE,
                                    ).group(1)
                                )
                                nas = int(
                                    re.search(
                                        "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.?:.+\((\d+)\)",
                                        response.text,
                                        re.IGNORECASE,
                                    ).group(1)
                                )
                                if nas < 500:
                                    led = int((500 - nas) / 25)
                                    if led > 0:
                                        return await conv.send_message(
                                            f"–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {led}"
                                        )
                        else:
                            await conv.send_message("–∂–∞–±–∞ –∏–Ω—Ñ–æ")
                            response = conv.wait_event(
                                events.NewMessage(
                                    incoming=True,
                                    from_users=1124824021,
                                    chats=chat,
                                )
                            )
                            response = await response
                            if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                time_f = re.search(
                                    "–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if time_f:
                                    hrs = int(time_f.group(1))
                                    min = int(time_f.group(2))
                                    delta = datetime.timedelta(
                                        hours=hrs, minutes=min, seconds=3
                                    )
                                    await conv.send_message(
                                        "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                                    )
                            else:
                                await conv.send_message("–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                                delta = datetime.timedelta(
                                    hours=4, seconds=3)
                                await conv.send_message(
                                    "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                                )
                            for i in range(4):
                                delta = delta + datetime.timedelta(hours=4)
                                await conv.send_message(
                                    "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                                )
                            if "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in response.text:
                                dng_s = re.search(
                                    "–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º.",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if dng_s:
                                    hrs = int(dng_s.group(1))
                                    min = int(dng_s.group(2))
                                    delta = datetime.timedelta(
                                        hours=hrs, minutes=min, seconds=3
                                    )
                                    await conv.send_message(
                                        "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                                    )
                                    await conv.send_message(
                                        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                                        schedule=delta
                                        + datetime.timedelta(seconds=13),
                                    )
                                await conv.send_message("–ú–æ—è —Å–µ–º—å—è")
                                response = await response
                                if "–í–∞—à –∂–∞–±—ë–Ω—ã—à:" in response.text:
                                    if "–ú–æ–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                        sem = re.search(
                                            "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                            response.text,
                                            re.IGNORECASE,
                                        )
                                        if sem:
                                            hrs = int(sem.group(1))
                                            min = int(sem.group(2))
                                        delta = datetime.timedelta(
                                            hours=hrs, minutes=min, seconds=3
                                        )
                                        await conv.send_message(
                                            "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞",
                                            schedule=delta,
                                        )
                                    else:
                                        await conv.send_message("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞")
                                    if "–ú–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑" in response.text:
                                        sad = re.search(
                                            "–∑–∞–±—Ä–∞—Ç—å —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                            response.text,
                                            re.IGNORECASE,
                                        )
                                        if sad:
                                            hrs = int(sad.group(1))
                                            min = int(sad.group(2))
                                            delta = datetime.timedelta(
                                                hours=hrs, minutes=min, seconds=3
                                            )
                                            await conv.send_message(
                                                "–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞",
                                                schedule=delta,
                                            )
                                    else:
                                        await conv.send_message("–∑–∞–±—Ä–∞—Ç—å –∂–∞–±–µ–Ω–∫–∞")
                                    if "–ü–æ–π—Ç–∏ –Ω–∞ –º–∞—Ö–∞—á" in response.text:
                                        sad = re.search(
                                            "–º–∞—Ö–∞—á —á–µ—Ä–µ–∑ (\d+) —á. (\d+) –º–∏–Ω—É—Ç",
                                            response.text,
                                            re.IGNORECASE,
                                        )
                                        if sad:
                                            hrs = int(sad.group(1))
                                            min = int(sad.group(2))
                                            delta = datetime.timedelta(
                                                hours=hrs, minutes=min, seconds=3
                                            )
                                            await conv.send_message(
                                                "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á",
                                                schedule=delta,
                                            )
                                    else:
                                        await conv.send_message(
                                            "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–±–µ–Ω–∫–∞ –Ω–∞ –º–∞—Ö–∞—á"
                                        )
                                await conv.send_message("–≤–æ–π–Ω–∞ –∏–Ω—Ñ–æ")
                                response = await response
                                if "–°–æ—Å—Ç–æ—è–Ω–∏–µ" in response.text:
                                    if chat in klw:
                                        return await conv.send_message(
                                            "–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É"
                                        )
                            else:
                                dng_s = re.search(
                                    "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                                    response.text,
                                    re.IGNORECASE,
                                )
                                if dng_s:
                                    hrs = int(dng_s.group(1))
                                    min = int(dng_s.group(2))
                                    delta = datetime.timedelta(
                                        hours=hrs, minutes=min, seconds=3
                                    )
                                    await conv.send_message(
                                        "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                                    )
                                    await conv.send_message(
                                        "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±–∫—É",
                                        schedule=delta
                                        + datetime.timedelta(minutes=25, seconds=3),
                                    )
                                    return await conv.send_message(
                                        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                                        schedule=delta
                                        + datetime.timedelta(
                                            minutes=45, seconds=13
                                        ),
                                    )
                    return await self.client.conversation(conv).cancel_all()
                else:
                    async with self.client.conversation(chat) as conv:
                        response = conv.wait_event(
                            events.NewMessage(
                                incoming=True,
                                from_users=1124824021,
                                chats=chat,
                            )
                        )
                        await conv.send_message("–∂–∞–±–∞ –∏–Ω—Ñ–æ")
                        response = await response
                        if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in response.text:
                            time_n = re.search(
                                "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                                response.text,
                                re.IGNORECASE,
                            )
                            if time_n:
                                hrs = int(time_n.group(1))
                                min = int(time_n.group(2))
                                delta = datetime.timedelta(
                                    hours=hrs, minutes=min, seconds=3
                                )
                                await conv.send_message(
                                    "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                                )
                        else:
                            delta = datetime.timedelta(
                                hours=6, seconds=3)
                            await conv.send_message("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                        for i in range(3):
                            delta = delta + \
                                datetime.timedelta(hours=6, seconds=3)
                            await conv.send_message(
                                "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                            )
                        if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in response.text:
                            time_j = re.search(
                                "–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                                response.text,
                                re.IGNORECASE,
                            )
                            if time_j:
                                hrs = int(time_j.group(1))
                                min = int(time_j.group(2))
                                delta = datetime.timedelta(
                                    hours=hrs, minutes=min, seconds=3
                                )
                                await conv.send_message(
                                    "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                                )
                                await conv.send_message(
                                    "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                    schedule=delta +
                                    datetime.timedelta(seconds=13),
                                )
                            for i in range(2):
                                delta = delta + \
                                    datetime.timedelta(hours=8)
                                await conv.send_message(
                                    "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                                )
                                await conv.send_message(
                                    "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                    schedule=delta +
                                    datetime.timedelta(seconds=13),
                                )
                                await conv.send_message(
                                    "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                                    schedule=delta
                                    + datetime.timedelta(hours=2, seconds=13),
                                )
                        if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in response.text:
                            time_r = re.search(
                                "—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                                response.text,
                                re.IGNORECASE,
                            )
                            if time_r:
                                hrs = int(time_r.group(1))
                                min = int(time_r.group(2))
                                delta = datetime.timedelta(
                                    hours=hrs, minutes=min, seconds=3
                                )
                                await conv.send_message(
                                    "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                                )
                        elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in response.text:
                            await conv.send_message("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                            await conv.send_message("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                            delta = datetime.timedelta(
                                hours=2, seconds=3)
                            await conv.send_message(
                                "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                            )
                        else:
                            await conv.send_message("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                            delta = datetime.timedelta(hours=6)
                        for i in range(2):
                            delta = delta + \
                                datetime.timedelta(hours=6, seconds=3)
                            await conv.send_message(
                                "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                            )
                            await conv.send_message(
                                "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                                schedule=delta +
                                datetime.timedelta(seconds=3),
                            )
                            await conv.send_message(
                                "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                                schedule=delta
                                + datetime.timedelta(hours=2, seconds=13),
                            )
                    await self.client.conversation(conv).cancel_all()
                return await self.client.conversation(conv).cancel_all()
            else:
                return
        except Exception as e:
            return await self.client.send_message('me', f'{e.args}')