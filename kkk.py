import asyncio
import logging
import re
from datetime import timedelta

from telethon import events

from .. import loader

logger = logging.getLogger(__name__)

@loader.tds
class KramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    strings = {"name": "kramiikk"}

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        self.client = client
        self.db = db
        self.su = self.db.get("su", "users", [])
        self.mu = self.db.get("su", "names", {})
        self.me = await client.get_me()

    async def tms(self, m, i):
        global MS
        MS = timedelta(
            hours=m.date.hour, minutes=m.date.minute, seconds=m.date.second
        ) - timedelta(hours=i.date.hour, minutes=i.date.minute, seconds=i.date.second)

    async def err(self, m, p):
        try:
            async with self.client.conversation(m.chat_id) as conv:
                global RSP
                RSP = await conv.wait_event(
                    events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
                )
        except asyncio.exceptions.TimeoutError:
            pass

    async def uku(self, m, cmn, txt):
        time = re.search(
            txt,
            RSP.text,
            re.IGNORECASE,
        )
        await self.client.send_message(
            m.chat_id,
            cmn,
            schedule=timedelta(hours=int(time.group(1)), minutes=int(time.group(2))),
        )

    async def bmj(self, m):
        p = "üê∏"
        await self.err(m, p)
        jab = re.search(r"–£—Ä.+: (\d+)[\s\S]*–ë—É.+: (\d+)", RSP.text)
        if "–ñ–∏–≤–∞—è" not in RSP.text:
            await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
        p = "üèÉ‚Äç‚ôÇÔ∏è"
        await m.respond("<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>")
        await self.err(m, p)
        if int(jab.group(1)) > 72 and int(jab.group(2)) > 3750:
            cmn = "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É"
            if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RSP.text:
                txt = r"–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º"
                await self.uku(m, cmn, txt)
            else:
                await m.respond(cmn)
            if "–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è" in RSP.text:
                cmn = "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ"
                await m.respond(cmn)
            elif (
                "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ 2—á" in RSP.text
                and "–ñ–∞–±—É –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in RSP.text
            ):
                cmn = "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ"
                await m.respond(cmn)
            elif "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in RSP.text:
                cmn = "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ"
                txt = r"–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º."
                await self.uku(m, cmn, txt)
        else:
            cmn = "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É"
            if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RSP.text:
                txt = r"–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º"
                await self.uku(m, cmn, txt)
            else:
                await m.respond(cmn)
            if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in RSP.text:
                cmn = "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ"
                txt = r"–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º"
                await self.uku(m, cmn, txt)
            elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in RSP.text:
                await m.respond("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
        if "–∂–∞–±—É —Å —Ä–∞–±–æ—Ç—ã" in RSP.text:
            cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
            await m.respond(cmn)
        elif "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in RSP.text:
            cmn = "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É"
            txt = r"—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç"
            await self.uku(m, cmn, txt)

    async def watcher(self, m):
        args = m.text
        name = "–ú–æ–Ω–∞—Ä—Ö"
        try:
            if m.message.startswith("–ô–æ—É,") and m.sender_id in {1124824021}:
                if "–æ–¥–µ—Ä–∂–∞–ª" in m.text:
                    klan = re.search(r"–∫–ª–∞–Ω (.+) –æ–¥–µ—Ä–∂–∞–ª[\s\S]* (\d+):(\d+)!", m.text)
                else:
                    klan = re.search(r", (.+) –≤ —ç—Ç–æ—Ç[\s\S]* (\d+):(\d+)", m.text)
                s = await self.client.get_messages(1767017980, search=f"VS {klan.group(1)}")
                for i in s:
                    await self.tms(m, i)
                    if (
                        timedelta(days=0, hours=4)
                        <= MS
                        < timedelta(days=0, hours=4, minutes=30)
                    ):
                        p = re.search(r"..(.+) <.+> (.+)", i.text)
                        chet = f"{klan.group(2)}:{klan.group(3)}"
                        if int(klan.group(2)) < int(klan.group(3)):
                            chet = "".join(reversed(chet))
                        tog = f"üèÜ {p.group(1)}\n             {chet}\nüîª {p.group(2)}"
                        if (klan.group(1) == p.group(1) and "—Å–ª–∞–±–µ–µ" in m.text) or (
                            klan.group(1) != p.group(1) and "–æ–¥–µ—Ä–∂–∞–ª" in m.text
                        ):
                            tog = f"üèÜ {p.group(2)}\n             {chet}\nüîª {p.group(1)}"
                        await i.reply(tog)
                ms = re.findall(r"‚Ä¢(<.+?(\d+).+>)", m.text)
                tog = f"Chat id: {m.chat_id}\n\n–°–æ—Å—Ç–∞–≤ {klan.group(1)}:"
                for i in ms:
                    tog += f"\n{i[0]} {i[1]}"
                await self.client.send_message(1655814348, tog)
            elif m.message.casefold().startswith(
                ("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É", "@toadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É")
            ) and len(m.message) in {21, 30}:
                p = None
                await self.err(m, p)
                if not RSP.text.startswith(("–ê–ª–ª–æ", "–í–∞—à –∫–ª–∞–Ω", "–î–ª—è —Å—Ç–∞—Ä—Ç–∞", "–ß—É–≤–∞–∫")):
                    src = f"{m.chat_id} {m.sender_id} –ö–ª–∞–Ω:"
                    lira = None
                    ms = await self.client.get_messages(1655814348, search=src)
                    for i in ms:
                        if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.message:
                            klan = re.search(
                                r"–õ–∏–≥–∞: (.+)\n–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)\n\n–ö–ª–∞–Ω: (.+)", i.text
                            )
                            lira = f"{klan.group(3)}\n–õ–∏–≥–∞: {klan.group(1)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(2)}"
                        else:
                            klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.text)
                            src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                            p = await self.client.get_messages(1782816965, search=src)
                            if p.total == 0:
                                return
                            for s in p:
                                lira = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", s.message)
                                lira = f"{klan.group(1)}\n–õ–∏–≥–∞: {lira.group(1)}"
                    if "–¥–µ—Ä–µ–≤—è–Ω" not in lira.casefold():
                        await self.client.send_message(1767017980, f"–í –ø–æ–∏—Å–∫–µ {lira}")
            elif m.message.startswith("–ê–ª–ª–æ") and m.sender_id in {1124824021}:
                klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", m.text)
                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                ms = await self.client.get_messages(1782816965, search=src)
                if ms.total == 0:
                    src = f"{m.chat_id} {klan.group(1)} –õ–∏–≥–∞:"
                    p = await self.client.get_messages(1655814348, search=src)
                    if p.total == 0:
                        return
                    for i in p:
                        ms = re.search(r"–õ–∏–≥–∞: (.+)", i.text).group(1)
                else:
                    for i in ms:
                        ms = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.text).group(1)
                if "–¥–µ—Ä–µ–≤—è–Ω" not in ms.casefold():
                    txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {ms}"
                    await self.client.send_message(1767017980, txt)
                    capt = re.findall(r"<.+?id=(\d+)\">", m.text)
                    tog = f"Chat id: {m.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n\n–°–æ—Å—Ç–∞–≤:"
                    for i in capt:
                        tog += f"\n{i}"
                    await self.client.send_message(1655814348, tog)
            elif m.message.casefold().startswith(("–º–æ–π –∫–ª–∞–Ω", "@toadbot –º–æ–π –∫–ª–∞–Ω")):
                p = "–ö–ª–∞–Ω"
                await self.err(m, p)
                klan = re.search(r"–Ω (.+):[\s\S]*–∞: (.+)[\s\S]*—å: (.+)", RSP.text)
                info = f"Chat id: {m.chat_id}\nUser id: {m.sender_id}\n–õ–∏–≥–∞: {klan.group(2)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {klan.group(3)}\n\n–ö–ª–∞–Ω: {klan.group(1)}"
                return await self.client.send_message(1655814348, info)
            elif m.message.casefold().startswith("/my_toad") and m.sender_id == self.me.id:
                await self.bmj(m)
            elif (
                m.message.startswith((name, f"@{self.me.username}"))
                and "–∏–Ω—Ñ–æ" in m.message
                and m.sender_id in {1785723159}
            ):
                await m.respond("<b>–º–æ—è –∂–∞–±–∞</b>")
                await self.bmj(m)
            elif (m.message.startswith((name, f"@{self.me.username}"))) and (
                m.sender_id in {1785723159, 1261343954} or m.sender_id in self.su
            ):
                cmn = "<b>—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É</b>"
                await m.respond(cmn)
                reply = await m.get_reply_message()
                if "–Ω–∞–ø–∏—à–∏ –≤" in m.message:
                    i = args.split(" ", 4)[3]
                    if i.isnumeric():
                        i = int(i)
                    s = args.split(" ", 4)[4]
                    if reply:
                        s = reply
                    await self.client.send_message(i, cmn)
                    await self.client.send_message(i, s)
                elif "–∞—Ä–µ–Ω–∞" in m.message:
                    p = "‚Ä¢"
                    await self.client.send_message(m.chat_id, "<b>–º–æ–∏ –∂–∞–±—ã</b>")
                    await self.err(m, p)
                    capt = re.findall(r"\| -100(\d+)", RSP.text)
                    for i in capt:
                        await self.client.send_message(int(i), cmn)
                        await self.client.send_message(int(i), "<b>–Ω–∞ –∞—Ä–µ–Ω—É</b>")
                elif "–Ω–∞–ø–∞–¥–∏" in m.message:
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in m.message:
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                elif "—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ" in m.message:
                    p = "–í–∞—à–µ"
                    await self.client.send_message(m.chat_id, "<b>–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</b>")
                    await self.err(m, p)
                    if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏")
                    if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç")
                    if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                    if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                    if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ" in RSP.text:
                        await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                else:
                    mmsg = args.split(" ", 2)[2]
                    if reply:
                        await reply.reply(mmsg)
                    else:
                        await m.respond(mmsg)
            elif f"–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: {self.me.first_name}" in m.message and m.buttons:
                await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                await m.click(0)
            elif (
                m.sender_id in {830605725}
                and m.buttons
                and "–í–∞—à–µ —É–≤–∞–∂–µ–Ω–∏–µ" not in m.message
                and "[12üîµ" not in m.message
            ):
                await m.click(0)
            elif "–ù–ï–ó–ê–ß–Å–¢!" in m.message and m.chat_id in {707693258}:
                args = [int(x) for x in m.text.split() if x.isnumeric()]
                delta = timedelta(hours=args[1], minutes=args[2], seconds=args[3])
                for i in range(3):
                    delta = delta + timedelta(seconds=30)
                    await self.client.send_message(m.chat_id, "–§–∞—Ä–º–∞", schedule=delta)
            elif m.message.casefold().startswith(
                ("–º–æ—è –∂–∞–±–∞", "@toadbot –º–æ—è –∂–∞–±–∞", "/my_toad")
            ) and len(m.message) in {17, 8}:
                p = "üê∏"
                await self.err(m, p)
                if "–ò–º—è –∂–∞–±—ã" in RSP.text:
                    reg = re.search(
                        r"–∂–∞–±—ã: (.+)[\s\S]*–π –∂–∞–±—ã: (.+)[\s\S]*–ö–ª–∞—Å—Å: (.+)",
                        RSP.raw_text,
                    )
                    info = f"Chat id: {m.chat_id}\nUser id: {m.sender_id}\n–ñ–∞–±–∞: {reg.group(1)}\n–£—Ä–æ–≤–µ–Ω—å: {reg.group(2)}\n–ö–ª–∞—Å—Å: {reg.group(3)}"
                    await self.client.send_message(1655814348, info)
            elif m.message.startswith("su!") and m.sender_id == self.me.id:
                i = int(args.split(" ", 1)[1])
                if i == self.me.id and i not in self.su:
                    self.su.append(i)
                    self.mu.setdefault("name", name)
                    await m.respond(f"{name} –∑–∞–ø–æ–º–Ω–∏—Ç–µ")
                    self.db.set("su", "users", self.su)
                    self.db.set("su", "names", self.mu)
                    return
                if i in self.su:
                    self.su.remove(i)
                    await m.respond(f"üñïüèæ {i} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                else:
                    self.su.append(i)
                    await m.respond(f"ü§ôüèæ {i} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
                self.db.set("su", "users", self.su)
            elif m.message.startswith("sn!") and m.sender_id == self.me.id:
                self.mu["name"] = args.split(" ", 1)[1]
                i = self.mu["name"]
                await m.respond(f"üëª {i} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
                self.db.set("su", "names", self.mu)
        finally:
            return
