import asyncio
import datetime
import logging
import random
import re

from telethon import events, functions

from .. import loader

logger = logging.getLogger(__name__)

MS = None
RESPONSE = datetime.timedelta(hours=4, minutes=30)
bak = [
    1785723159,
    1261343954,
    1377037394,
    547639600,
    553299699,
    412897338,
    449434040,
    388412512,
]


@loader.tds
class KramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    answers = {
        0: ("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        1: ("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        2: ("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        3: ("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç"),
    }
    strings = {"name": "kramiikk", "quest_answer": "<i>%answer%</i>"}

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        """.

        ----------

        """
        self.client = client
        self.db = db
        self.me = await client.get_me()

    async def err(self, m, p, s):
        """.

        ----------

        """
        async with self.client.conversation(m.chat_id) as conv:
            await s
            global RESPONSE
            RESPONSE = await conv.wait_event(
                events.NewMessage(from_users=1124824021, chats=m.chat_id, pattern=p)
            )
            await conv.cancel_all()

    async def ter(self, m, p):
        """.

        ----------

        """
        s = await self.client.get_messages(1767017980, search=p)
        global MS
        for MS in s:
            global RESPONSE
            RESPONSE = datetime.timedelta(
                hours=m.date.hour, minutes=m.date.minute, seconds=m.date.second
            ) - datetime.timedelta(
                hours=MS.date.hour, minutes=MS.date.minute, seconds=MS.date.second
            )

    async def watcher(self, m):
        """.

        ----------

        """
        name = "–º–æ–Ω–∞—Ä—Ö"
        if ("–ò—Ç–æ–≥–∏" or "–≠–π, –∫–ª–∞–Ω") in m.message and m.sender_id in {
            1124824021,
            1261343954,
        }:
            if "–æ–¥–µ—Ä–∂–∞–ª" in m.message:
                klan = re.search(r"–∫–ª–∞–Ω (.+) –æ–¥–µ—Ä–∂–∞–ª[\s\S]* (\d+):(\d+)!", m.message)
            elif "—Å–ª–∞–±–µ–µ" in m.message:
                klan = re.search(r", (.+) –≤ —ç—Ç–æ—Ç[\s\S]* (\d+):(\d+)", m.message)
            else:
                klan = re.search(r"–∫–ª–∞–Ω (.+),", m.message)
            p = f"VS {klan.group(1)}"
            await self.ter(m, p)
            if (
                datetime.timedelta(days=0, hours=4)
                < RESPONSE
                < datetime.timedelta(days=0, hours=4, minutes=30)
            ):
                capt = re.search(r"‚ö°Ô∏è(.+) VS (.+)", MS.message)
                chet = f"{klan.group(2)}:{klan.group(3)}"
                itog = f"{capt.group(1)} ü•≥ {capt.group(2)} üò¢"
                if (klan.group(1) == capt.group(1) and "–æ–¥–µ—Ä–∂–∞–ª" in m.message) or (
                    klan.group(1) != capt.group(1) and "—Å–ª–∞–±–µ–µ" in m.message
                ):
                    if int(klan.group(2)) < int(klan.group(3)):
                        chet = "".join(reversed(chet))
                elif (klan.group(1) == capt.group(1) and "—Å–ª–∞–±–µ–µ" in m.message) or (
                    klan.group(1) != capt.group(1) and "–æ–¥–µ—Ä–∂–∞–ª" in m.message
                ):
                    if int(klan.group(2)) > int(klan.group(3)):
                        chet = "".join(reversed(chet))
                    itog = f"{capt.group(1)} üò¢ {capt.group(2)} ü•≥"
                else:
                    itog = "–ø–æ–±–µ–¥–∏–ª–∞ –ª—é–±–æ–≤—åüè≥Ô∏è‚Äçüåà"
                    chet = "ü´Ç"
                itog += f"\n<i>{chet}</i>"
                await MS.reply(itog)
                capt = re.findall(r"‚Ä¢(<.+?(\d+).+>)", m.text)
                itog = f"Chat id: {m.chat_id}\n\n–°–æ—Å—Ç–∞–≤ {klan.group(1)}:"
                for i in capt:
                    itog += f"\n{i[0]} {i[1]}"
                await self.client.send_message(1655814348, itog)
        elif m.message.lower().startswith(
            ("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é", "@tgtoadbot –Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é")
        ):
            p = None
            s = self.client.send_message(1655814348, m.message)
            await self.err(m, p, s)
            if not RESPONSE.text.startswith(
                ("–ê–ª–ª–æ", "–í–∞—à –∫–ª–∞–Ω", "–î–ª—è —Å—Ç–∞—Ä—Ç–∞", "–ß—É–≤–∞–∫")
            ):
                src = f"Chat id: {m.chat_id} {m.sender_id} –ö–ª–∞–Ω:"
                ms = await self.client.get_messages(1655814348, search=src)
                for i in ms:
                    liga = None
                    klan = re.search(r"–ö–ª–∞–Ω: (.+)", i.message).group(1)
                p = f"VS {klan}"
                await self.ter(m, p)
                if RESPONSE != datetime.timedelta(days=0, hours=0):
                    if "–£—Å–∏–ª–∏—Ç–µ–ª—å:" in i.message:
                        p = re.search(r"–õ–∏–≥–∞: (.+)\n–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)", i.message)
                        liga = f"{p.group(1)}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {p.group(2)}"
                    else:
                        src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan}"
                        p = await self.client.get_messages(1782816965, search=src)
                        if p.total != 0:
                            return
                        for s in p:
                            liga = re.search(
                                r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", s.message
                            ).group(1)
                    if ("–≤ –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π" or "–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è") not in liga:
                        txt = f"–í –ø–æ–∏—Å–∫–µ {klan}\n–õ–∏–≥–∞: {liga}"
                        await self.client.send_message(1767017980, txt)
        elif m.message.startswith("–ê–ª–ª–æ") and m.sender_id in {1124824021}:
            klan = re.search(r"–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", m.text)
            p = f"VS {klan.group(1)}"
            await self.ter(m, p)
            if RESPONSE != datetime.timedelta(days=0, hours=0):
                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {klan.group(1)}"
                ms = await self.client.get_messages(1782816965, search=src)
                if ms.total == 0:
                    src = f"{m.chat_id} {klan.group(1)} –õ–∏–≥–∞:"
                    ms = await self.client.get_messages(1655814348, search=src)
                    if ms.total != 0:
                        return
                    for i in ms:
                        ms = re.search(r"–õ–∏–≥–∞: (.+)", i.message).group(1)
                else:
                    for i in ms:
                        ms = re.search(r"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message).group(1)
                        
                if ("–≤ –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–π" or "–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è") not in ms:
                    txt = f"‚ö°Ô∏è{klan.group(1)} <b>VS</b> {klan.group(2)}\n–õ–∏–≥–∞: {ms}"
                    await self.client.send_message(1767017980, txt)
                    capt = re.findall(r"<.+?id=(\d+)\">", m.text)
                    itog = f"Chat id: {m.chat_id}\n–ö–ª–∞–Ω: {klan.group(1)}\n\n–°–æ—Å—Ç–∞–≤:"
                    for i in capt:
                        itog += f"\n{i}"
                    await self.client.send_message(1655814348, itog)
        elif m.message.lower().startswith(("–º–æ–π –∫–ª–∞–Ω", "@tgtoadbot –º–æ–π –∫–ª–∞–Ω")):
            async with self.client.conversation(m.chat_id) as conv:
                response = conv.wait_event(
                    events.NewMessage(
                        incoming=True,
                        from_users=1124824021,
                        chats=m.chat_id,
                    )
                )
                response = await response
                if "–û–ø—ã—Ç" in response.text:
                    klan = re.search("–ö–ª–∞–Ω (.+):", response.text).group(1)
                    liga = re.search("–õ–∏–≥–∞: (.+)", response.text).group(1)
                    usil = re.search("–£—Å–∏–ª–∏—Ç–µ–ª—å: (.+)", response.text).group(1)
                    info = response.text
                    clj = re.search(
                        r"\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\W+ (.+)\n\n",
                        response.text,
                    )
                    if clj:
                        lid = clj.group(1)
                        ja1 = clj.group(2)
                        ja2 = clj.group(3)
                        ja3 = clj.group(4)
                        ja4 = clj.group(5)
                        info = f"Chat id: {m.chat_id}\nUser id: {m.sender_id}\n–ò–º—è: {m.sender.first_name}\n–õ–∏–≥–∞: {liga}\n–£—Å–∏–ª–∏—Ç–µ–ª—å: {usil}\n\n–ö–ª–∞–Ω: {klan}\n(–ª–∏–¥): {lid}\n{ja1}\n{ja2}\n{ja3}:\n{ja4}"
                    return await self.client.send_message(1655814348, info)
        elif "–∑–∞—Ö–≤–∞—Ç —Ç–æ–ø–∞" in m.message and m.sender_id in bak:
            args = m.message
            p = "‚öîÔ∏è"
            s = self.client.send_message(
                m.chat_id, "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤ " + args.split(" ", 2)[2]
            )
            await self.err(m, p, s)
            result = re.findall(r"(\d+)\. üõ°(\d+) \| (.*)", RESPONSE.text)
            rep = "üßõüèø–ó–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –≤ —ç—Ç–æ–º —Å–µ–∑–æ–Ω–µüßõüèø\n(–ü–æ–±–µ–¥—ã | –ù–∞–∑–≤–∞–Ω–∏–µ | –ù–∞–∫–∞–∑–∞–Ω–∏–µ):"
            for i in result:
                src = f"{i[2]} –£—Å–∏–ª–∏—Ç–µ–ª—å:"
                ms = await self.client.get_messages(1655814348, search=src)
                if ms.total != 0:
                    s = "<i>üòà–ó–∞—Ö–≤–∞—á–µ–Ω</i>"
                else:
                    s = "<i>üåö–ö—Ç–æ —ç—Ç–æ...</i>"
                rep += f"\n{i[0]}.üõ°{i[1]} | {i[2]} | {s}"
            await RESPONSE.reply(rep)
        elif (
            m.message.lower().startswith((name, f"@{self.me.username}"))
            or (name in m.message and m.message.endswith("üòâ"))
        ) and m.sender_id in bak:
            await asyncio.sleep(random.randint(1, 13))
            args = m.message
            reply = await m.get_reply_message()
            count = args.split(" ", 2)[1]
            if m.message.endswith("?"):
                words = re.findall(r"\w+", f"{m.message}")
                words_len = [words.__len__()] + [x.__len__() for x in words]
                i = words_len.__len__()
                while i > 1:
                    i -= 1
                    for s in range(i):
                        words_len[s] = (
                            words_len[s] + words_len[s + 1] - 3
                            if words_len[s] + words_len[s + 1] > 3
                            else words_len[s] + words_len[s + 1]
                        )
                await m.reply(
                    self.strings["quest_answer"].replace(
                        "%answer%", random.choice(self.answers[words_len[0]])
                    )
                )
            elif "–Ω–∞–ø–∏—à–∏ –≤" in m.message:
                i = args.split(" ", 4)[3]
                if i.isnumeric():
                    i = int(i)
                s = args.split(" ", 4)[4]
                if reply:
                    s = reply
                await self.client.send_message(i, s)
            elif "—Ä–µ–ø–ª–∞–π" in m.message:
                i = args.split(" ", 4)[2]
                if i.isnumeric():
                    i = int(i)
                p = args.split(" ", 4)[3]
                if p.isnumeric():
                    p = int(p)
                i = await self.client.get_messages(i, ids=p)
                s = args.split(" ", 4)[4]
                if reply:
                    s = reply
                await i.reply(s)
            elif "reply" in m.message:
                await m.respond(reply)
            elif "–Ω–∞–ø–∞–¥–∏" in m.message:
                p = None
                s = self.client.send_message(m.chat_id, "<b>–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω</b>")
                await self.err(m, p, s)
                if "–í–∞—à–∞ –∂–∞–±–∞ –Ω–∞" in RESPONSE.text:
                    await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                elif "–í–∞—à–∞ –∂–∞–±–∞ —Å–µ–π—á–∞—Å" in RESPONSE.text:
                    await m.respond("–≤—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
            elif "–ø–æ–¥–∑–µ–º–µ–ª—å–µ" in m.message:
                p = None
                s = self.client.send_message(
                    m.chat_id, "<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>"
                )
                await self.err(m, p, s)
                if "–ü–æ–∂–∞–ª–µ–π—Ç–µ –∂–∞–±—É," in RESPONSE.text:
                    await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                elif "–í–∞—à–∞ –∂–∞–±–∞ –ø—Ä–∏" in RESPONSE.text:
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("<b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ</b>")
                else:
                    await m.respond("<b>—Ä–µ–π–¥ –∏–Ω—Ñ–æ</b>")
            elif "—Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ" in m.message:
                p = "–í–∞—à–µ"
                s = self.client.send_message(m.chat_id, "<b>–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</b>")
                await self.err(m, p, s)
                if "–ë–ª–∏–∂–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –∫–ª—é–≤ —Ü–∞–ø–ª–∏")
                if "–î–∞–ª—å–Ω–∏–π –±–æ–π: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –±—É–∫–∞—à–∫–æ–º–µ—Ç")
                if "–ù–∞–≥–æ–ª–æ–≤–Ω–∏–∫: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥–æ–ª–æ–≤–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                if "–ù–∞–≥—Ä—É–¥–Ω–∏–∫: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–≥—Ä—É–¥–Ω–∏–∫ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                if "–ù–∞–ª–∞–ø–Ω–∏–∫–∏: –ü—É—Å—Ç–æ" in RESPONSE.text:
                    await m.respond("—Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å –Ω–∞–ª–∞–ø–Ω–∏–∫–∏ –∏–∑ –∫–ª—é–≤–∞ —Ü–∞–ø–ª–∏")
                else:
                    await m.respond("–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
            elif m.message.lower().startswith("–ª–≤–ª —á–µ–∫"):
                s = (
                    (int(m.message.split(" ", 3)[2]) + int(m.message.split(" ", 3)[3]))
                    - 160
                ) * 2
                if s > -1:
                    await m.reply(f"<b>~ {s} –ª–≤–ª</b>")
            elif "—Ç—É—Å–∞" in m.message:
                await m.respond("–∂–∞–±—É –Ω–∞ —Ç—É—Å—É")
            elif "–≥–æ –∫–≤" in m.message:
                await m.respond("–Ω–∞—á–∞—Ç—å –∫–ª–∞–Ω–æ–≤—É—é –≤–æ–π–Ω—É")
            elif count.isnumeric() and reply:
                count = int(args.split(" ", 3)[1])
                mmsg = args.split(" ", 3)[3]
                time = int(args.split(" ", 3)[2])
                for i in range(count):
                    await reply.reply(mmsg)
                    await asyncio.sleep(time)
            elif count.isnumeric():
                count = int(args.split(" ", 3)[1])
                mmsg = args.split(" ", 3)[3]
                time = int(args.split(" ", 3)[2])
                for i in range(count):
                    await m.reply(mmsg)
                    await asyncio.sleep(time)
            else:
                mmsg = args.split(" ", 2)[2]
                if reply:
                    await reply.reply(mmsg)
                else:
                    await m.respond(mmsg)
        elif m.message.lower().startswith("–±—É–∫–∞—à–∫–∏ –º–Ω–µüòä") and m.sender_id in bak:
            await asyncio.sleep(random.randint(1, 13))
            p = "–ë–∞–ª–∞–Ω—Å"
            s = self.client.send_message(m.chat_id, "<b>–º–æ–π –±–∞–ª–∞–Ω—Å</b>")
            await self.err(m, p, s)
            bug = int(re.search(r"–∂–∞–±—ã: (\d+)", RESPONSE.text, re.IGNORECASE).group(1))
            if bug < 100:
                await m.reply("–æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è –ø–æ—Ö–æ–¥–∞")
            else:
                while bug > 50049:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ 50000")
                    bug -= 50000
                snt = bug - 50
                await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±—É–∫–∞—à–∫–∏ {snt}")
        elif m.message.lower().startswith("–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –º–Ω–µüòä") and m.sender_id in bak:
            await asyncio.sleep(random.randint(1, 13))
            p = "–í–∞—à"
            s = self.client.send_message(m.chat_id, "<b>–º–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å</b>")
            await self.err(m, p, s)
            cnd = int(
                re.search(r"–õ–µ–¥–µ–Ω—Ü—ã: (\d+)", RESPONSE.text, re.IGNORECASE).group(1)
            )
            apt = int(
                re.search(r"–ê–ø—Ç–µ—á–∫–∏: (\d+)", RESPONSE.text, re.IGNORECASE).group(1)
            )
            if cnd > 0:
                if cnd > 49:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã 50")
                else:
                    await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–µ–¥–µ–Ω—Ü—ã {cnd}")
                if apt > 9:
                    await m.reply("–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ 10")
                else:
                    await m.reply(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ø—Ç–µ—á–∫–∏ {apt}")
        elif "—Å–µ–π—á–∞—Å –≤ –∫–≤" in m.message:
            ms = await self.client.get_messages(1767017980, limit=42)
            s = "<b>–°–µ–π—á–∞—Å –≤ –∫–≤:\n</b>"
            for i in ms:
                delta = datetime.timedelta(
                    hours=m.date.hour, minutes=m.date.minute, seconds=m.date.second
                ) - datetime.timedelta(
                    hours=i.date.hour, minutes=i.date.minute, seconds=i.date.second
                )
                if "VS" in i.message and datetime.timedelta(
                    days=0
                ) <= delta < datetime.timedelta(hours=4, minutes=3):
                    s += f"\n{i.message}\n<i>–í—Ä–µ–º—è –∫–≤: {delta}</i>\n"
            await m.edit(s)
        elif f"–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥: {self.me.first_name}" in m.message and m.buttons:
            await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
            await m.click(0)
        elif (
            "[8üêù]" or "[4üêù]" or "[2‚ò¢Ô∏èüêù, 2üî¥üêù," or "–ë–∑–∑–∑–∑! –° –ø–∞—Å–µ–∫–∏"
        ) in m.message and m.buttons:
            await m.click(0)
        elif "–ù–ï–ó–ê–ß–Å–¢!" in m.message and m.chat_id in {707693258}:
            args = [int(x) for x in m.text.split() if x.isnumeric()]
            delta = datetime.timedelta(hours=4)
            if len(args) == 4:
                delta = datetime.timedelta(
                    hours=args[1], minutes=args[2], seconds=args[3] + 13
                )
            elif len(args) == 3:
                delta = datetime.timedelta(minutes=args[1], seconds=args[2] + 13)
            elif len(args) == 2:
                delta = datetime.timedelta(seconds=args[1] + 13)
            for i in range(3):
                delta = delta + datetime.timedelta(seconds=13)
                await self.client.send_message(m.chat_id, "–§–∞—Ä–º–∞", schedule=delta)
        elif (
            m.message.lower().startswith(("–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏"))
            and m.sender_id in bak
        ):
            sch = (
                await self.client(
                    functions.messages.GetScheduledHistoryRequest(m.chat_id, 0)
                )
            ).messages
            await self.client(
                functions.messages.DeleteScheduledMessagesRequest(
                    m.chat_id, id=[x.id for x in sch]
                )
            )
            p = "üê∏"
            s = self.client.send_message(m.chat_id, "<b>–º–æ—è –∂–∞–±–∞</b>")
            await self.err(m, p, s)
            jaba = re.search(r"–£—Ä–æ–≤–µ–Ω—å.+: (\d+)[\s\S]*–ë—É–∫–∞—à–∫–∏: (\d+)", RESPONSE.text)
            if int(jaba.group(1)) > 50 and int(jaba.group(2)) > 2700:
                p = "üç≠"
                s = self.client.send_message(m.chat_id, "<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>")
                await self.err(m, p, s)
                if "(–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RESPONSE.text:
                    time_f = re.search(
                        r"–û—Ç–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(time_f.group(1)),
                        minutes=int(time_f.group(2)),
                        seconds=3,
                    )
                    await self.client.send_message(
                        m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                else:
                    await self.client.send_message(m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                    delta = datetime.timedelta(hours=4, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                for i in range(4):
                    delta = delta + datetime.timedelta(hours=4)
                    await self.client.send_message(
                        m.chat_id, "–æ—Ç–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                if "–í –ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ" in RESPONSE.text:
                    dng_s = re.search(
                        r"–ø–æ–¥–∑–µ–º–µ–ª—å–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+)—á. (\d+)–º.",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(dng_s.group(1)),
                        minutes=int(dng_s.group(2)),
                        seconds=3,
                    )
                    await self.client.send_message(
                        m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                        schedule=delta + datetime.timedelta(seconds=13),
                    )
                    if int(dng_s.group(1)) > 1:
                        await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                        await m.respond("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                        delta = datetime.timedelta(hours=2, seconds=3)
                        await self.client.send_message(
                            m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                        )
                    for i in range(2):
                        delta = delta + datetime.timedelta(hours=6, seconds=3)
                        await self.client.send_message(
                            m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + datetime.timedelta(seconds=3),
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                            schedule=delta + datetime.timedelta(hours=2, seconds=13),
                        )
                elif "–ó–∞–±—Ä–∞—Ç—å –∂–∞–±—É –º–æ–∂–Ω–æ" in RESPONSE.text:
                    dng_s = re.search(
                        r"–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(dng_s.group(1)),
                        minutes=int(dng_s.group(2)),
                        seconds=3,
                    )
                    await self.client.send_message(
                        m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±–∫—É",
                        schedule=delta + datetime.timedelta(minutes=25, seconds=3),
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "–û—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –∑–æ–ª–æ—Ç–æ–µ –ø–æ–¥–∑–µ–º–µ–ª—å–µ",
                        schedule=delta + datetime.timedelta(minutes=45, seconds=13),
                    )
            else:
                p = "üç≠"
                s = self.client.send_message(m.chat_id, "<b>–∂–∞–±–∞ –∏–Ω—Ñ–æ</b>")
                await self.err(m, p, s)
                if "–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑" in RESPONSE.text:
                    time_n = re.search(
                        r"–ø–æ–∫–æ—Ä–º–∏—Ç—å —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(time_n.group(1)),
                        minutes=int(time_n.group(2)),
                        seconds=3,
                    )
                    await self.client.send_message(
                        m.chat_id, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                else:
                    delta = datetime.timedelta(hours=6, seconds=3)
                    await m.respond("–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É")
                for i in range(3):
                    delta = delta + datetime.timedelta(hours=6, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "–ø–æ–∫–æ—Ä–º–∏—Ç—å –∂–∞–±–∫—É", schedule=delta
                    )
                if "—Ä–∞–±–æ—Ç—É –º–æ–∂–Ω–æ" in RESPONSE.text:
                    time = re.search(
                        r"–±—É–¥–µ—Ç —á–µ—Ä–µ–∑ (\d+)—á:(\d+)–º",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(time.group(1)), minutes=int(time.group(2)), seconds=3
                    )
                    await self.client.send_message(
                        m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                        schedule=delta + datetime.timedelta(seconds=13),
                    )
                    for i in range(2):
                        delta = delta + datetime.timedelta(hours=8)
                        await self.client.send_message(
                            m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                            schedule=delta + datetime.timedelta(seconds=13),
                        )
                        await self.client.send_message(
                            m.chat_id,
                            "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                            schedule=delta + datetime.timedelta(hours=2, seconds=13),
                        )
                if "–∂–∞–±—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑" in RESPONSE.text:
                    time = re.search(
                        r"—á–µ—Ä–µ–∑ (\d+) —á–∞—Å–æ–≤ (\d+) –º–∏–Ω—É—Ç",
                        RESPONSE.text,
                        re.IGNORECASE,
                    )
                    delta = datetime.timedelta(
                        hours=int(time.group(1)), minutes=int(time.group(2)), seconds=3
                    )
                    await self.client.send_message(
                        m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                elif "–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å" in RESPONSE.text:
                    await m.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
                    await m.respond("—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ")
                    delta = datetime.timedelta(hours=2, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É", schedule=delta
                    )
                else:
                    await m.respond("–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É")
                    delta = datetime.timedelta(hours=6)
                for i in range(2):
                    delta = delta + datetime.timedelta(hours=6, seconds=3)
                    await self.client.send_message(
                        m.chat_id, "—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É", schedule=delta
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "—Ä–∞–±–æ—Ç–∞ –∫—Ä—É–ø—å–µ",
                        schedule=delta + datetime.timedelta(seconds=3),
                    )
                    await self.client.send_message(
                        m.chat_id,
                        "–∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É",
                        schedule=delta + datetime.timedelta(hours=2, seconds=13),
                    )

                # if message.message.lower().startswith(
                #     ("–º–æ—è –∂–∞–±–∞", "@tgtoadbot –º–æ—è –∂–∞–±–∞")
                # ):
                #     async with self.client.conversation(chat) as conv:
                #         response = conv.wait_event(
                #             events.NewMessage(
                #                 incoming=True,
                #                 from_users=1124824021,
                #                 chats=message.chat_id,
                #             )
                #         )
                #         response = await response
                #         if "–ò–º—è –∂–∞–±—ã:" in response.text:
                #             imy = re.search("–ò–º—è –∂–∞–±—ã: (.+)",
                #                             response.text).group(1)
                #             urv = re.search("–≤–∞—à–µ–π –∂–∞–±—ã: (.+)",
                #                             response.text).group(1)
                #             cll = re.search(
                #                 "–ö–ª–∞—Å—Å: (.+)", response.text).group(1)
                #             info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ñ–∞–±–∞: {imy}\n–£—Ä–æ–≤–µ–Ω—å: {urv}\n–ö–ª–∞—Å—Å: {cll}\n{message.sender.first_name}"
                #             return await self.client.send_message(OPPY, info)
                # if message.message.lower().startswith(
                #     ("–º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ", "@tgtoadbot –º–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
                # ):
                #     async with self.client.conversation(chat) as conv:
                #         response = conv.wait_event(
                #             events.NewMessage(
                #                 incoming=True,
                #                 from_users=1124824021,
                #                 chats=message.chat_id,
                #             )
                #         )
                #         response = await response
                #         if "–í–∞—à–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:" in response.text:
                #             snr = re.search(
                #                 "(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n(.+)\n\n.+\n.+\n.+\n.+\n\n(.+)\n(.+)\n(.+)",
                #                 response.text,
                #             )
                #             if snr:
                #                 aa = snr.group(1)
                #                 a1 = snr.group(2)
                #                 a2 = snr.group(3)
                #                 a3 = snr.group(4)
                #                 a4 = snr.group(5)
                #                 a5 = snr.group(6)
                #                 a6 = snr.group(7)
                #                 a7 = snr.group(8)
                #                 a8 = snr.group(9)
                #                 a9 = snr.group(10)
                #             info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ò–º—è: {message.sender.first_name}\\n\n–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:\n{aa}\n{a1}\n{a2}\n{a3}\n{a4}\n\n{a5}\n{a6}\n{a7}\n{a8}\n{a9}"
                #             return await self.client.send_message(OPPY, info)
                # if message.message.lower().startswith(
                #     ("–Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω", "@tgtoadbot –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –∫–ª–∞–Ω")
                # ):
                #     async with self.client.conversation(chat) as conv:
                #         response = conv.wait_event(
                #             events.MessageEdited(
                #                 incoming=True,
                #                 from_users=1124824021,
                #                 chats=chat,
                #             )
                #         )
                #         response = await response
                #         if "1 –∞—Ç–∞–∫–∞" in response.text:
                #             jbb = re.search(
                #                 "–∞ (.+):\n.+: (.+) \n.+\n.+: (\d+)\n\n.+–∞ (.+):\n.+: (.+) \n.+\n.+: (\d+)$",
                #                 response.text,
                #             )
                #             if jbb:
                #                 jn = jbb.group(1)
                #                 ur = jbb.group(2)
                #                 zd = jbb.group(3)
                #                 jn1 = jbb.group(4)
                #                 ur1 = jbb.group(5)
                #                 zd1 = jbb.group(6)
                #                 x = int(ur)
                #                 u = int(zd)
                #                 y = ((x + u) - 160) * 2
                #                 x1 = int(ur1)
                #                 u1 = int(zd1)
                #                 y1 = ((x1 + u1) - 160) * 2
                #             info = f"Chat id: {chat}\nUser id: {message.sender_id}\n–ñ–∞–±–∞: {jn}\n–£—Ä–æ–≤–µ–Ω—å: ~{y+1}\n\n–ñ–∞–±–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {jn1}\n–£—Ä–æ–≤–µ–Ω—å: ~{y1+1}"
                #             mf = await self.client.send_message(OPPY, info)
                #             response1 = await conv.wait_event(
                #                 events.NewMessage(
                #                     incoming=True,
                #                     from_users=1124824021,
                #                     chats=message.chat_id,
                #                 )
                #             )
                #             if f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {jn}!!!" in response1.text:
                #                 info += f"\n\n<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {jn}!!!</b>"
                #             elif f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {jn1}!!!" in response1.text:
                #                 info += f"\n\n<b>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å {jn1}!!!</b>"
                #             await mf.edit(info)
