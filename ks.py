import asyncio
import datetime
import logging
import random
import re

from telethon import events, functions

from .. import loader, utils

logger = logging.getLogger(__name__)
asl = [
    "–∂–∞–±–∞ –¥–Ω—è",
    "—Ç–æ–ø –∂–∞–±",
    "—Å–µ–∑–æ–Ω –∫–ª–∞–Ω–æ–≤",
    "–∫–ª–∞–Ω—ã",
    "–≤–∑—è—Ç—å –∂–∞–±—É",
]
bak = [
    1709411724,
    1261343954,
    1785723159,
    1486632011,
    1863720231,
    547639600,
    449434040,
    388412512,
    553299699,
    412897338,
]
elj = [
    -1001441941681,
    -1001436786642,
    -1001380664241,
    -1001289617428,
    -1001485617300,
    -1001465870466,
    -1001169549362,
    -1001543064221,
]
klw = [-419726290, -1001543064221, -577735616, -1001493923839]
ninja = [
    -1001380664241,
    -1001441941681,
    -1001289617428,
    -1001436786642,
    -1001447960786,
    -1001290958283,
    -1001485617300,
]
nr = [1, 3, 5, 7, 9]


def register(cb):
    """.

    ----------

    """
    cb(kramiikkMod())


@loader.tds
class kramiikkMod(loader.Module):
    """–ê–ª–∏–Ω–∞, —è –ª—é–±–ª—é —Ç–µ–±—è."""

    answers = {
        0: ("–û—Ç–≤–µ—Ç —Ç–µ–±–µ –∏–∑–≤–µ—Å—Ç–µ–Ω", "–¢—ã –∑–Ω–∞–µ—à—å –ª—É—á—à–µ –º–µ–Ω—è!", "–û—Ç–≤–µ—Ç —É–±–∏–ª!.."),
        1: ("–î–∞, –Ω–æ –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏", "–ú–æ–∂–µ—Ç –±—ã—Ç—å", "–í–µ—Ä–æ—è—Ç–Ω–æ", "–í–æ–∑–º–æ–∂–Ω–æ", "–ù–∞–≤–µ—Ä–Ω—è–∫–∞"),
        2: ("–ï—Å—Ç—å –ø–æ–º–µ—Ö–∏...", "–í—Ä—è–¥ –ª–∏", "–ß—Ç–æ-—Ç–æ –ø–æ–º–µ—à–∞–µ—Ç", "–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ"),
        3: ("–ù–µ—Ç, –Ω–æ –ø–æ–∫–∞", "–°–∫–æ—Ä–æ!", "–ñ–¥–∏!", "–ü–æ–∫–∞ –Ω–µ—Ç"),
    }
    strings = {
        "name": "kramiikk",
        "quest_answer": "<i>%answer%</i>",
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self, client, db):
        """.

        ----------

        """
        self.client = client
        self.db = db
        self.me = await client.get_me()
        self.status = db.get("Status", "status", {})
        self.duel = db.get("–î—É—ç–ª—å–∫–∞", "duel", {})

    async def watcher(self, message):
        """.

        ----------

        """
        asly = random.choice(asl)
        chat = message.chat_id
        name = "–º–æ–Ω–∞—Ä—Ö"
        rh = random.choice(nr)
        rd = random.randint(rh, 13)
        if "–°–µ–π—á–∞—Å –≤—ã–±–∏—Ä–∞–µ—Ç —Ö–æ–¥" in message.message and message.mentioned:
            await message.respond("—Ä–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –∂–∞–±—É")
            await message.click(0)
        elif "[8üêù]" in message.message:
            await message.click(0)
        elif "[4üêù]" in message.message:
            await message.click(0)
        elif "[2‚ò¢Ô∏èüêù, 2üî¥üêù," in message.message:
            await message.click(0)
        elif "–ë–∑–∑–∑–∑! –° –ø–∞—Å–µ–∫–∏" in message.message:
            await message.click(0)
        elif "–ù–ï–ó–ê–ß–Å–¢!" in message.message and chat in {707693258}:
            args = [int(x) for x in message.text.split() if x.isnumeric()]
            rd = random.randint(20, 60)
            if len(args) == 4:
                delta = datetime.timedelta(
                    hours=args[1], minutes=args[2], seconds=args[3] + 13
                )
            elif len(args) == 3:
                delta = datetime.timedelta(
                    minutes=args[1], seconds=args[2] + 13)
            elif len(args) == 2:
                delta = datetime.timedelta(seconds=args[1] + 13)
            for i in range(3):
                delta = delta + datetime.timedelta(seconds=13)
                await self.client.send_message(chat, "–§–∞—Ä–º–∞", schedule=delta)
        elif (
            "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É" in message.message
            and message.sender_id not in {self.me.id, 1124824021}
            and chat in self.duel
        ):
            await asyncio.sleep(rd)
            await utils.answer(message, "–¥—É—ç–ª—å")
        elif (
            f"–í—ã –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥—É—ç–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.me.first_name}"
            in message.message
            and message.sender_id in {1124824021}
            and chat in self.duel
        ):
            await asyncio.sleep(rd)
            await message.respond("–¥—É—ç–ª—å –ø—Ä–∏–Ω—è—Ç—å")
            await asyncio.sleep(rd)
            await message.respond("–¥—É—ç–ª—å —Å—Ç–∞—Ä—Ç")
        elif (
            f"{self.status['–ò–º—è –ñ–∞–±—ã']}, –£ –≤–∞—Å –Ω–∏—á—å—è" in message.message
            and chat in self.duel
        ):
            await asyncio.sleep(rd)
            await message.respond("–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
        elif (
            self.status["–ò–º—è –ñ–∞–±—ã"] in message.message
            and "–æ—Ç—ã–≥—Ä–∞–ª" in message.message
            and chat in self.duel
        ):
            self.duel.pop(chat)
            self.db.set("–î—É—ç–ª—å–∫–∞", "duel", self.duel)
            await utils.answer(message, "<b>–ø—å—é —Ä–æ–º–∞—à–∫–æ–≤—ã–π —á–∞–π</b>!")
        elif (
            "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å" in message.message
            and self.status["–ò–º—è –ñ–∞–±—ã"] not in message.message
            and chat in self.duel
        ):
            await asyncio.sleep(rd)
            await utils.answer(message, "–†–µ–∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç–¨ –∂–∞–±—É")
        elif (
            message.message.startswith("–ê–ª–ª–æ")
            and message.sender_id in {1124824021}
            and chat in ninja
        ):
            capt = re.search(
                "–∫–ª–∞–Ω–∞ (.+) –Ω–∞—à–µ–ª—Å—è –≤—Ä–∞–≥ (.+), –ø–æ—Ä–∞", message.text)
            if capt:
                mk = capt.group(1)
                ek = capt.group(2)
                txt = f"‚ö°Ô∏è{mk} <b>VS</b> {ek}"
                nm = await self.client.send_message(1767017980, txt)
                src = f"–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ {mk}"
                ms = await self.client.get_messages(1782816965, search=src)
                if ms.total == 0:
                    src = f"{chat} {mk} –õ–∏–≥–∞:"
                    ms1 = await self.client.get_messages(1655814348, search=src)
                    for i in ms1:
                        liga = re.search("–õ–∏–≥–∞: (.+)", i.message).group(1)
                else:
                    for i in ms:
                        liga = re.search(
                            "–¢–æ–ø 35 –∫–ª–∞–Ω–æ–≤ (.+) –ª–∏–≥–µ", i.message
                        ).group(1)
                txt += f"\n–õ–∏–≥–∞: {liga}"
                await utils.answer(nm, txt)
        else:
            return